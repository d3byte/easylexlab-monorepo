{"version":3,"sources":["../../../../../server/app/assets/material-design-icons/iconfont/iconjar-map.js"],"names":["fileSystem","require","readLine","path","MAP_FILE_NAME","readLineHandle","createInterface","input","createReadStream","output","process","stdout","terminal","json","icons","on","line","nameCodepointPair","split","codepoint","name","toLowerCase","trim","replace","char","toUpperCase","writeFileSync","JSON","stringify"],"mappings":";;AAEA,IAAIA,aAAaC,QAAQ,IAAR,CAAjB;AACA,IAAIC,WAAWD,QAAQ,UAAR,CAAf;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;;AAEA;AACA,IAAIG,gBAAgB,6BAApB;;AAEA;AACA,IAAIC,iBAAiBH,SAASI,eAAT,CAAyB;AAC5CC,SAAOP,WAAWQ,gBAAX,CAA4B,YAA5B,CADqC;AAE5CC,UAAQC,QAAQC,MAF4B;AAG5CC,YAAU;AAHkC,CAAzB,CAArB;;AAMA;AACA,IAAIC,OAAO,EAACC,OAAO,EAAR,EAAX;AACAT,eAAeU,EAAf,CAAkB,MAAlB,EAA0B,UAASC,IAAT,EAAe;AACvC;AACA,MAAIC,oBAAoBD,KAAKE,KAAL,CAAW,GAAX,CAAxB;;AAEA;AACA,MAAIC,YAAYF,kBAAkB,CAAlB,CAAhB;AACA,MAAIG,OAAOH,kBAAkB,CAAlB,EAAqBI,WAArB,GAAmCC,IAAnC,GACNC,OADM,CACE,cADF,EACkB,GADlB,EAENA,OAFM,CAEE,UAFF,EAEc,UAASC,IAAT,EAAe;AAClC,WAAOA,KAAKC,WAAL,EAAP;AACD,GAJM,CAAX;;AAMA;AACAZ,OAAKC,KAAL,CAAWK,SAAX,IAAwB,EAACC,MAAMA,IAAP,EAAxB;AACD,CAdD;;AAgBAf,eAAeU,EAAf,CAAkB,OAAlB,EAA2B,YAAW;AACpC;AACAf,aAAW0B,aAAX,CAAyBtB,aAAzB,EAAwCuB,KAAKC,SAAL,CAAef,IAAf,CAAxC;AACD,CAHD","file":"iconjar-map.js","sourcesContent":["\r\n\r\nvar fileSystem = require('fs');\r\nvar readLine = require('readline');\r\nvar path = require('path');\r\n\r\n// Output file path\r\nvar MAP_FILE_NAME = 'MaterialIcons-Regular.ijmap';\r\n\r\n// Create a file streaming interface\r\nvar readLineHandle = readLine.createInterface({\r\n  input: fileSystem.createReadStream('codepoints'),\r\n  output: process.stdout,\r\n  terminal: false\r\n});\r\n\r\n// Read each line by line from the file codepoints file\r\nvar json = {icons: {}};\r\nreadLineHandle.on('line', function(line) {\r\n  // Match the name, space then any unicode after it\r\n  var nameCodepointPair = line.split(' ');\r\n\r\n  // Titleize the glyph name\r\n  var codepoint = nameCodepointPair[1];\r\n  var name = nameCodepointPair[0].toLowerCase().trim()\r\n      .replace(/[^0-9a-z]+/gi, ' ')\r\n      .replace(/\\b[a-z]/g, function(char) {\r\n        return char.toUpperCase();\r\n      });\r\n\r\n  // Assign the codepoint to the name for IconJar\r\n  json.icons[codepoint] = {name: name};\r\n});\r\n\r\nreadLineHandle.on('close', function() {\r\n  // Once reading has finished here we can write the file\r\n  fileSystem.writeFileSync(MAP_FILE_NAME, JSON.stringify(json));\r\n});\r\n"]}