{"version":3,"sources":["../../../../../server/app/libs/jquery/flot/jquery.flot.js"],"names":["$","color","make","r","g","b","a","o","add","c","d","i","length","charAt","normalize","scale","f","toString","join","clamp","min","value","max","parseInt","clone","extract","elem","css","toLowerCase","parent","nodeName","get","parse","str","res","m","exec","parseFloat","name","trim","lookupColors","aqua","azure","beige","black","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","white","yellow","jQuery","hasOwnProperty","Object","prototype","fn","detach","each","parentNode","removeChild","Canvas","cls","container","element","children","document","createElement","className","direction","position","left","top","appendTo","getContext","window","G_vmlCanvasManager","initElement","Error","context","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","resize","width","height","textContainer","text","_textCache","style","restore","save","clear","clearRect","render","cache","layerKey","call","layer","getTextLayer","layerCache","hide","styleKey","styleCache","key","positions","active","rendered","append","splice","show","classes","bottom","right","insertAfter","addClass","getTextInfo","font","angle","textStyle","info","variant","weight","size","lineHeight","family","html","outerWidth","outerHeight","addText","x","y","halign","valign","push","Math","round","removeText","Plot","placeholder","data_","options_","plugins","series","options","colors","legend","noColumns","labelFormatter","labelBoxBorderColor","margin","backgroundColor","backgroundOpacity","sorted","xaxis","mode","tickColor","transform","inverseTransform","autoscaleMargin","ticks","tickFormatter","labelWidth","labelHeight","reserveSpace","tickLength","alignTicksWithAxis","tickDecimals","tickSize","minTickSize","yaxis","xaxes","yaxes","points","radius","lineWidth","fill","fillColor","symbol","lines","steps","bars","barWidth","align","horizontal","zero","shadowSize","highlightColor","grid","aboveData","borderColor","labelMargin","axisMargin","borderWidth","minBorderMargin","markings","markingsColor","markingsLineWidth","clickable","hoverable","autoHighlight","mouseActiveRadius","interaction","redrawOverlayInterval","hooks","surface","overlay","eventHolder","ctx","octx","plotOffset","plotWidth","plotHeight","processOptions","processRawData","processDatapoints","processOffset","drawBackground","drawSeries","draw","bindEvents","drawOverlay","shutdown","plot","setData","setupGrid","getPlaceholder","getCanvas","getPlotOffset","offset","getData","getAxes","concat","_","axis","n","getXAxes","getYAxes","c2p","canvasToAxisCoords","p2c","axisToCanvasCoords","getOptions","highlight","unhighlight","triggerRedrawOverlay","pointOffset","point","axisNumber","destroy","removeData","empty","highlights","initPlugins","parseOptions","setupCanvases","executeHooks","hook","args","apply","p","init","extend","opts","axisOptions","axisCount","fontSize","fontSizeDefault","replace","fontDefaults","noTicks","x2axis","y2axis","coloredAreas","coloredAreasColor","getOrCreateAxis","parseData","fillInSeriesOptions","processData","s","data","obj","coord","allAxes","grep","pos","used","x1","undefined","y1","axes","number","neededColors","maxIndex","sc","colorPool","colorPoolSize","variation","colori","v","topSentry","Number","POSITIVE_INFINITY","bottomSentry","NEGATIVE_INFINITY","fakeInfinity","MAX_VALUE","j","k","ps","val","format","updateAxis","datamin","datamax","datapoints","required","autoscale","defaultValue","pointsize","insertSteps","nullify","isNaN","Infinity","xmin","ymin","xmax","ymax","delta","filter","hasClass","remove","unbind","existing","mousemove","onMouseMove","bind","onMouseLeave","click","onClick","redrawTimeout","clearTimeout","setTransformationHelpers","identity","t","it","abs","measureTickLabels","maxWidth","floor","legacyStyles","label","allocateAxisBoxFirstPhase","lw","lh","isXAxis","padding","innermost","outermost","first","found","box","allocateAxisBoxSecondPhase","adjustLayoutForThingsStickingOut","minMargin","margins","ceil","showGrid","axisOpts","setRange","allocatedAxes","setupTickGeneration","setTicks","snapRangeToTicks","drawAxisLabels","insertLegend","widen","sqrt","dec","log","LN10","maxDec","magn","pow","norm","tickGenerator","start","floorInBase","NaN","prev","factor","formatted","decimal","indexOf","precision","substr","isFunction","otherAxis","niceTicks","extraDec","ts","test","toFixed","oticks","drawGrid","extractRange","ranges","from","to","tmp","translate","fillStyle","getColorOrGradient","fillRect","bw","bc","xrange","yrange","xequal","yequal","subPixel","beginPath","strokeStyle","moveTo","lineTo","stroke","xoff","yoff","strokeRect","tick","drawSeriesLines","drawSeriesBars","drawSeriesPoints","plotLine","xoffset","yoffset","axisx","axisy","prevx","prevy","x2","y2","plotLineArea","areaOpen","ypos","segmentStart","segmentEnd","x1old","x2old","lineJoin","sw","PI","sin","cos","getFillStyle","plotPoints","shadow","arc","closePath","w","drawBar","barLeft","barRight","fillStyleCallback","drawLeft","drawRight","drawTop","drawBottom","plotBars","filloptions","seriesColor","find","fragments","entries","rowStarted","lf","sort","reverse","ascending","entry","table","div","prependTo","findNearbyItem","mouseX","mouseY","seriesFilter","maxDistance","smallestDistance","item","foundPoint","mx","my","maxx","maxy","dx","dy","dist","datapoint","slice","dataIndex","seriesIndex","e","triggerClickHoverEvent","eventname","event","canvasX","pageX","canvasY","pageY","h","auto","trigger","setTimeout","hi","drawBarHighlight","drawPointHighlight","indexOfHighlight","pointRadius","spec","defaultColor","gradient","createLinearGradient","l","co","brightness","opacity","addColorStop","version","base"],"mappings":"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","file":"jquery.flot.js","sourcesContent":["/* Javascript plotting library for jQuery, version 0.8.3.\r\n\r\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\r\nLicensed under the MIT license.\r\n\r\n*/\r\n\r\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\r\n// for convenience\r\n\r\n/* Plugin for jQuery for working with colors.\r\n *\r\n * Version 1.1.\r\n *\r\n * Inspiration from jQuery color animation plugin by John Resig.\r\n *\r\n * Released under the MIT license by Ole Laursen, October 2009.\r\n *\r\n * Examples:\r\n *\r\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\r\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\r\n *   console.log(c.r, c.g, c.b, c.a);\r\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\r\n *\r\n * Note that .scale() and .add() return the same modified object\r\n * instead of making a new one.\r\n *\r\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\r\n * produce a color rather than just crashing.\r\n */\r\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\r\n\r\n// the actual Flot code\r\n(function($) {\r\n\r\n\t// Cache the prototype hasOwnProperty for faster access\r\n\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\r\n    // operation produces the same effect as detach, i.e. removing the element\r\n    // without touching its jQuery data.\r\n\r\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\r\n\r\n    if (!$.fn.detach) {\r\n        $.fn.detach = function() {\r\n            return this.each(function() {\r\n                if (this.parentNode) {\r\n                    this.parentNode.removeChild( this );\r\n                }\r\n            });\r\n        };\r\n    }\r\n\r\n\t///////////////////////////////////////////////////////////////////////////\r\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\r\n\t//\r\n\t// @constructor\r\n\t// @param {string} cls List of classes to apply to the canvas.\r\n\t// @param {element} container Element onto which to append the canvas.\r\n\t//\r\n\t// Requiring a container is a little iffy, but unfortunately canvas\r\n\t// operations don't work unless the canvas is attached to the DOM.\r\n\r\n\tfunction Canvas(cls, container) {\r\n\r\n\t\tvar element = container.children(\".\" + cls)[0];\r\n\r\n\t\tif (element == null) {\r\n\r\n\t\t\telement = document.createElement(\"canvas\");\r\n\t\t\telement.className = cls;\r\n\r\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\r\n\t\t\t\t.appendTo(container);\r\n\r\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\r\n\r\n\t\t\tif (!element.getContext) {\r\n\t\t\t\tif (window.G_vmlCanvasManager) {\r\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.element = element;\r\n\r\n\t\tvar context = this.context = element.getContext(\"2d\");\r\n\r\n\t\t// Determine the screen's ratio of physical to device-independent\r\n\t\t// pixels.  This is the ratio between the canvas width that the browser\r\n\t\t// advertises and the number of pixels actually present in that space.\r\n\r\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\r\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\r\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\r\n\r\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\r\n\t\t\tbackingStoreRatio =\r\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\r\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\r\n\t\t\t\tcontext.msBackingStorePixelRatio ||\r\n\t\t\t\tcontext.oBackingStorePixelRatio ||\r\n\t\t\t\tcontext.backingStorePixelRatio || 1;\r\n\r\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\r\n\r\n\t\t// Size the canvas to match the internal dimensions of its container\r\n\r\n\t\tthis.resize(container.width(), container.height());\r\n\r\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\r\n\r\n\t\tthis.textContainer = null;\r\n\t\tthis.text = {};\r\n\r\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\r\n\t\t// re-calculating them when the plot is re-rendered in a loop.\r\n\r\n\t\tthis._textCache = {};\r\n\t}\r\n\r\n\t// Resizes the canvas to the given dimensions.\r\n\t//\r\n\t// @param {number} width New width of the canvas, in pixels.\r\n\t// @param {number} width New height of the canvas, in pixels.\r\n\r\n\tCanvas.prototype.resize = function(width, height) {\r\n\r\n\t\tif (width <= 0 || height <= 0) {\r\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\r\n\t\t}\r\n\r\n\t\tvar element = this.element,\r\n\t\t\tcontext = this.context,\r\n\t\t\tpixelRatio = this.pixelRatio;\r\n\r\n\t\t// Resize the canvas, increasing its density based on the display's\r\n\t\t// pixel ratio; basically giving it more pixels without increasing the\r\n\t\t// size of its element, to take advantage of the fact that retina\r\n\t\t// displays have that many more pixels in the same advertised space.\r\n\r\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\r\n\r\n\t\tif (this.width != width) {\r\n\t\t\telement.width = width * pixelRatio;\r\n\t\t\telement.style.width = width + \"px\";\r\n\t\t\tthis.width = width;\r\n\t\t}\r\n\r\n\t\tif (this.height != height) {\r\n\t\t\telement.height = height * pixelRatio;\r\n\t\t\telement.style.height = height + \"px\";\r\n\t\t\tthis.height = height;\r\n\t\t}\r\n\r\n\t\t// Save the context, so we can reset in case we get replotted.  The\r\n\t\t// restore ensure that we're really back at the initial state, and\r\n\t\t// should be safe even if we haven't saved the initial state yet.\r\n\r\n\t\tcontext.restore();\r\n\t\tcontext.save();\r\n\r\n\t\t// Scale the coordinate space to match the display density; so even though we\r\n\t\t// may have twice as many pixels, we still want lines and other drawing to\r\n\t\t// appear at the same size; the extra pixels will just make them crisper.\r\n\r\n\t\tcontext.scale(pixelRatio, pixelRatio);\r\n\t};\r\n\r\n\t// Clears the entire canvas area, not including any overlaid HTML text\r\n\r\n\tCanvas.prototype.clear = function() {\r\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\r\n\t};\r\n\r\n\t// Finishes rendering the canvas, including managing the text overlay.\r\n\r\n\tCanvas.prototype.render = function() {\r\n\r\n\t\tvar cache = this._textCache;\r\n\r\n\t\t// For each text layer, add elements marked as active that haven't\r\n\t\t// already been rendered, and remove those that are no longer active.\r\n\r\n\t\tfor (var layerKey in cache) {\r\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\r\n\r\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\r\n\t\t\t\t\tlayerCache = cache[layerKey];\r\n\r\n\t\t\t\tlayer.hide();\r\n\r\n\t\t\t\tfor (var styleKey in layerCache) {\r\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\r\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\r\n\t\t\t\t\t\tfor (var key in styleCache) {\r\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\r\n\r\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\r\n\r\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\r\n\t\t\t\t\t\t\t\t\tif (position.active) {\r\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\r\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\r\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\r\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\r\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\r\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlayer.show();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Creates (if necessary) and returns the text overlay container.\r\n\t//\r\n\t// @param {string} classes String of space-separated CSS classes used to\r\n\t//     uniquely identify the text layer.\r\n\t// @return {object} The jQuery-wrapped text-layer div.\r\n\r\n\tCanvas.prototype.getTextLayer = function(classes) {\r\n\r\n\t\tvar layer = this.text[classes];\r\n\r\n\t\t// Create the text layer if it doesn't exist\r\n\r\n\t\tif (layer == null) {\r\n\r\n\t\t\t// Create the text layer container, if it doesn't exist\r\n\r\n\t\t\tif (this.textContainer == null) {\r\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text'></div>\")\r\n\t\t\t\t\t.css({\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\ttop: 0,\r\n\t\t\t\t\t\tleft: 0,\r\n\t\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\t\tright: 0,\r\n\t\t\t\t\t\t'font-size': \"smaller\",\r\n\t\t\t\t\t\tcolor: \"#545454\"\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.insertAfter(this.element);\r\n\t\t\t}\r\n\r\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\r\n\t\t\t\t.addClass(classes)\r\n\t\t\t\t.css({\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: 0,\r\n\t\t\t\t\tleft: 0,\r\n\t\t\t\t\tbottom: 0,\r\n\t\t\t\t\tright: 0\r\n\t\t\t\t})\r\n\t\t\t\t.appendTo(this.textContainer);\r\n\t\t}\r\n\r\n\t\treturn layer;\r\n\t};\r\n\r\n\t// Creates (if necessary) and returns a text info object.\r\n\t//\r\n\t// The object looks like this:\r\n\t//\r\n\t// {\r\n\t//     width: Width of the text's wrapper div.\r\n\t//     height: Height of the text's wrapper div.\r\n\t//     element: The jQuery-wrapped HTML div containing the text.\r\n\t//     positions: Array of positions at which this text is drawn.\r\n\t// }\r\n\t//\r\n\t// The positions array contains objects that look like this:\r\n\t//\r\n\t// {\r\n\t//     active: Flag indicating whether the text should be visible.\r\n\t//     rendered: Flag indicating whether the text is currently visible.\r\n\t//     element: The jQuery-wrapped HTML div containing the text.\r\n\t//     x: X coordinate at which to draw the text.\r\n\t//     y: Y coordinate at which to draw the text.\r\n\t// }\r\n\t//\r\n\t// Each position after the first receives a clone of the original element.\r\n\t//\r\n\t// The idea is that that the width, height, and general 'identity' of the\r\n\t// text is constant no matter where it is placed; the placements are a\r\n\t// secondary property.\r\n\t//\r\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\r\n\t// either returns the cached element or creates a new entry.\r\n\t//\r\n\t// @param {string} layer A string of space-separated CSS classes uniquely\r\n\t//     identifying the layer containing this text.\r\n\t// @param {string} text Text string to retrieve info for.\r\n\t// @param {(string|object)=} font Either a string of space-separated CSS\r\n\t//     classes or a font-spec object, defining the text's font and style.\r\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\r\n\t//     Angle is currently unused, it will be implemented in the future.\r\n\t// @param {number=} width Maximum width of the text before it wraps.\r\n\t// @return {object} a text info object.\r\n\r\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\r\n\r\n\t\tvar textStyle, layerCache, styleCache, info;\r\n\r\n\t\t// Cast the value to a string, in case we were given a number or such\r\n\r\n\t\ttext = \"\" + text;\r\n\r\n\t\t// If the font is a font-spec object, generate a CSS font definition\r\n\r\n\t\tif (typeof font === \"object\") {\r\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\r\n\t\t} else {\r\n\t\t\ttextStyle = font;\r\n\t\t}\r\n\r\n\t\t// Retrieve (or create) the cache for the text's layer and styles\r\n\r\n\t\tlayerCache = this._textCache[layer];\r\n\r\n\t\tif (layerCache == null) {\r\n\t\t\tlayerCache = this._textCache[layer] = {};\r\n\t\t}\r\n\r\n\t\tstyleCache = layerCache[textStyle];\r\n\r\n\t\tif (styleCache == null) {\r\n\t\t\tstyleCache = layerCache[textStyle] = {};\r\n\t\t}\r\n\r\n\t\tinfo = styleCache[text];\r\n\r\n\t\t// If we can't find a matching element in our cache, create a new one\r\n\r\n\t\tif (info == null) {\r\n\r\n\t\t\tvar element = $(\"<div></div>\").html(text)\r\n\t\t\t\t.css({\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t'max-width': width,\r\n\t\t\t\t\ttop: -9999\r\n\t\t\t\t})\r\n\t\t\t\t.appendTo(this.getTextLayer(layer));\r\n\r\n\t\t\tif (typeof font === \"object\") {\r\n\t\t\t\telement.css({\r\n\t\t\t\t\tfont: textStyle,\r\n\t\t\t\t\tcolor: font.color\r\n\t\t\t\t});\r\n\t\t\t} else if (typeof font === \"string\") {\r\n\t\t\t\telement.addClass(font);\r\n\t\t\t}\r\n\r\n\t\t\tinfo = styleCache[text] = {\r\n\t\t\t\twidth: element.outerWidth(true),\r\n\t\t\t\theight: element.outerHeight(true),\r\n\t\t\t\telement: element,\r\n\t\t\t\tpositions: []\r\n\t\t\t};\r\n\r\n\t\t\telement.detach();\r\n\t\t}\r\n\r\n\t\treturn info;\r\n\t};\r\n\r\n\t// Adds a text string to the canvas text overlay.\r\n\t//\r\n\t// The text isn't drawn immediately; it is marked as rendering, which will\r\n\t// result in its addition to the canvas on the next render pass.\r\n\t//\r\n\t// @param {string} layer A string of space-separated CSS classes uniquely\r\n\t//     identifying the layer containing this text.\r\n\t// @param {number} x X coordinate at which to draw the text.\r\n\t// @param {number} y Y coordinate at which to draw the text.\r\n\t// @param {string} text Text string to draw.\r\n\t// @param {(string|object)=} font Either a string of space-separated CSS\r\n\t//     classes or a font-spec object, defining the text's font and style.\r\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\r\n\t//     Angle is currently unused, it will be implemented in the future.\r\n\t// @param {number=} width Maximum width of the text before it wraps.\r\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\r\n\t//     \"center\" or \"right\".\r\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\r\n\t//     \"middle\" or \"bottom\".\r\n\r\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\r\n\r\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\r\n\t\t\tpositions = info.positions;\r\n\r\n\t\t// Tweak the div's position to match the text's alignment\r\n\r\n\t\tif (halign == \"center\") {\r\n\t\t\tx -= info.width / 2;\r\n\t\t} else if (halign == \"right\") {\r\n\t\t\tx -= info.width;\r\n\t\t}\r\n\r\n\t\tif (valign == \"middle\") {\r\n\t\t\ty -= info.height / 2;\r\n\t\t} else if (valign == \"bottom\") {\r\n\t\t\ty -= info.height;\r\n\t\t}\r\n\r\n\t\t// Determine whether this text already exists at this position.\r\n\t\t// If so, mark it for inclusion in the next render pass.\r\n\r\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\r\n\t\t\tif (position.x == x && position.y == y) {\r\n\t\t\t\tposition.active = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If the text doesn't exist at this position, create a new entry\r\n\r\n\t\t// For the very first position we'll re-use the original element,\r\n\t\t// while for subsequent ones we'll clone it.\r\n\r\n\t\tposition = {\r\n\t\t\tactive: true,\r\n\t\t\trendered: false,\r\n\t\t\telement: positions.length ? info.element.clone() : info.element,\r\n\t\t\tx: x,\r\n\t\t\ty: y\r\n\t\t};\r\n\r\n\t\tpositions.push(position);\r\n\r\n\t\t// Move the element to its final position within the container\r\n\r\n\t\tposition.element.css({\r\n\t\t\ttop: Math.round(y),\r\n\t\t\tleft: Math.round(x),\r\n\t\t\t'text-align': halign\t// In case the text wraps\r\n\t\t});\r\n\t};\r\n\r\n\t// Removes one or more text strings from the canvas text overlay.\r\n\t//\r\n\t// If no parameters are given, all text within the layer is removed.\r\n\t//\r\n\t// Note that the text is not immediately removed; it is simply marked as\r\n\t// inactive, which will result in its removal on the next render pass.\r\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\r\n\t// where we potentially get rid of all text on a layer, but will likely\r\n\t// add back most or all of it later, as when redrawing axes, for example.\r\n\t//\r\n\t// @param {string} layer A string of space-separated CSS classes uniquely\r\n\t//     identifying the layer containing this text.\r\n\t// @param {number=} x X coordinate of the text.\r\n\t// @param {number=} y Y coordinate of the text.\r\n\t// @param {string=} text Text string to remove.\r\n\t// @param {(string|object)=} font Either a string of space-separated CSS\r\n\t//     classes or a font-spec object, defining the text's font and style.\r\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\r\n\t//     Angle is currently unused, it will be implemented in the future.\r\n\r\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\r\n\t\tif (text == null) {\r\n\t\t\tvar layerCache = this._textCache[layer];\r\n\t\t\tif (layerCache != null) {\r\n\t\t\t\tfor (var styleKey in layerCache) {\r\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\r\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\r\n\t\t\t\t\t\tfor (var key in styleCache) {\r\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\r\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\r\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\r\n\t\t\t\t\t\t\t\t\tposition.active = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\r\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\r\n\t\t\t\tif (position.x == x && position.y == y) {\r\n\t\t\t\t\tposition.active = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t///////////////////////////////////////////////////////////////////////////\r\n\t// The top-level container for the entire plot.\r\n\r\n    function Plot(placeholder, data_, options_, plugins) {\r\n        // data is on the form:\r\n        //   [ series1, series2 ... ]\r\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\r\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\r\n\r\n        var series = [],\r\n            options = {\r\n                // the color theme used for graphs\r\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\r\n                legend: {\r\n                    show: true,\r\n                    noColumns: 1, // number of colums in legend table\r\n                    labelFormatter: null, // fn: string -> string\r\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\r\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\r\n                    position: \"ne\", // position of default legend container within plot\r\n                    margin: 5, // distance from grid edge to default legend container within plot\r\n                    backgroundColor: null, // null means auto-detect\r\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\r\n                    sorted: null    // default to no legend sorting\r\n                },\r\n                xaxis: {\r\n                    show: null, // null = auto-detect, true = always, false = never\r\n                    position: \"bottom\", // or \"top\"\r\n                    mode: null, // null or \"time\"\r\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\r\n                    color: null, // base color, labels, ticks\r\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\r\n                    transform: null, // null or f: number -> number to transform axis\r\n                    inverseTransform: null, // if transform is set, this should be the inverse function\r\n                    min: null, // min. value to show, null means set automatically\r\n                    max: null, // max. value to show, null means set automatically\r\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\r\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\r\n                    tickFormatter: null, // fn: number -> string\r\n                    labelWidth: null, // size of tick labels in pixels\r\n                    labelHeight: null,\r\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\r\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\r\n                    alignTicksWithAxis: null, // axis number or null for no sync\r\n                    tickDecimals: null, // no. of decimals, null means auto\r\n                    tickSize: null, // number or [number, \"unit\"]\r\n                    minTickSize: null // number or [number, \"unit\"]\r\n                },\r\n                yaxis: {\r\n                    autoscaleMargin: 0.02,\r\n                    position: \"left\" // or \"right\"\r\n                },\r\n                xaxes: [],\r\n                yaxes: [],\r\n                series: {\r\n                    points: {\r\n                        show: false,\r\n                        radius: 3,\r\n                        lineWidth: 2, // in pixels\r\n                        fill: true,\r\n                        fillColor: \"#ffffff\",\r\n                        symbol: \"circle\" // or callback\r\n                    },\r\n                    lines: {\r\n                        // we don't put in show: false so we can see\r\n                        // whether lines were actively disabled\r\n                        lineWidth: 2, // in pixels\r\n                        fill: false,\r\n                        fillColor: null,\r\n                        steps: false\r\n                        // Omit 'zero', so we can later default its value to\r\n                        // match that of the 'fill' option.\r\n                    },\r\n                    bars: {\r\n                        show: false,\r\n                        lineWidth: 2, // in pixels\r\n                        barWidth: 1, // in units of the x axis\r\n                        fill: true,\r\n                        fillColor: null,\r\n                        align: \"left\", // \"left\", \"right\", or \"center\"\r\n                        horizontal: false,\r\n                        zero: true\r\n                    },\r\n                    shadowSize: 3,\r\n                    highlightColor: null\r\n                },\r\n                grid: {\r\n                    show: true,\r\n                    aboveData: false,\r\n                    color: \"#545454\", // primary color used for outline and labels\r\n                    backgroundColor: null, // null for transparent, else color\r\n                    borderColor: null, // set if different from the grid color\r\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\r\n                    margin: 0, // distance from the canvas edge to the grid\r\n                    labelMargin: 5, // in pixels\r\n                    axisMargin: 8, // in pixels\r\n                    borderWidth: 2, // in pixels\r\n                    minBorderMargin: null, // in pixels, null means taken from points radius\r\n                    markings: null, // array of ranges or fn: axes -> array of ranges\r\n                    markingsColor: \"#f4f4f4\",\r\n                    markingsLineWidth: 2,\r\n                    // interactive stuff\r\n                    clickable: false,\r\n                    hoverable: false,\r\n                    autoHighlight: true, // highlight in case mouse is near\r\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\r\n                },\r\n                interaction: {\r\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\r\n                },\r\n                hooks: {}\r\n            },\r\n        surface = null,     // the canvas for the plot itself\r\n        overlay = null,     // canvas for interactive stuff on top of plot\r\n        eventHolder = null, // jQuery object that events should be bound to\r\n        ctx = null, octx = null,\r\n        xaxes = [], yaxes = [],\r\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\r\n        plotWidth = 0, plotHeight = 0,\r\n        hooks = {\r\n            processOptions: [],\r\n            processRawData: [],\r\n            processDatapoints: [],\r\n            processOffset: [],\r\n            drawBackground: [],\r\n            drawSeries: [],\r\n            draw: [],\r\n            bindEvents: [],\r\n            drawOverlay: [],\r\n            shutdown: []\r\n        },\r\n        plot = this;\r\n\r\n        // public functions\r\n        plot.setData = setData;\r\n        plot.setupGrid = setupGrid;\r\n        plot.draw = draw;\r\n        plot.getPlaceholder = function() { return placeholder; };\r\n        plot.getCanvas = function() { return surface.element; };\r\n        plot.getPlotOffset = function() { return plotOffset; };\r\n        plot.width = function () { return plotWidth; };\r\n        plot.height = function () { return plotHeight; };\r\n        plot.offset = function () {\r\n            var o = eventHolder.offset();\r\n            o.left += plotOffset.left;\r\n            o.top += plotOffset.top;\r\n            return o;\r\n        };\r\n        plot.getData = function () { return series; };\r\n        plot.getAxes = function () {\r\n            var res = {}, i;\r\n            $.each(xaxes.concat(yaxes), function (_, axis) {\r\n                if (axis)\r\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\r\n            });\r\n            return res;\r\n        };\r\n        plot.getXAxes = function () { return xaxes; };\r\n        plot.getYAxes = function () { return yaxes; };\r\n        plot.c2p = canvasToAxisCoords;\r\n        plot.p2c = axisToCanvasCoords;\r\n        plot.getOptions = function () { return options; };\r\n        plot.highlight = highlight;\r\n        plot.unhighlight = unhighlight;\r\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\r\n        plot.pointOffset = function(point) {\r\n            return {\r\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\r\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\r\n            };\r\n        };\r\n        plot.shutdown = shutdown;\r\n        plot.destroy = function () {\r\n            shutdown();\r\n            placeholder.removeData(\"plot\").empty();\r\n\r\n            series = [];\r\n            options = null;\r\n            surface = null;\r\n            overlay = null;\r\n            eventHolder = null;\r\n            ctx = null;\r\n            octx = null;\r\n            xaxes = [];\r\n            yaxes = [];\r\n            hooks = null;\r\n            highlights = [];\r\n            plot = null;\r\n        };\r\n        plot.resize = function () {\r\n        \tvar width = placeholder.width(),\r\n        \t\theight = placeholder.height();\r\n            surface.resize(width, height);\r\n            overlay.resize(width, height);\r\n        };\r\n\r\n        // public attributes\r\n        plot.hooks = hooks;\r\n\r\n        // initialize\r\n        initPlugins(plot);\r\n        parseOptions(options_);\r\n        setupCanvases();\r\n        setData(data_);\r\n        setupGrid();\r\n        draw();\r\n        bindEvents();\r\n\r\n\r\n        function executeHooks(hook, args) {\r\n            args = [plot].concat(args);\r\n            for (var i = 0; i < hook.length; ++i)\r\n                hook[i].apply(this, args);\r\n        }\r\n\r\n        function initPlugins() {\r\n\r\n            // References to key classes, allowing plugins to modify them\r\n\r\n            var classes = {\r\n                Canvas: Canvas\r\n            };\r\n\r\n            for (var i = 0; i < plugins.length; ++i) {\r\n                var p = plugins[i];\r\n                p.init(plot, classes);\r\n                if (p.options)\r\n                    $.extend(true, options, p.options);\r\n            }\r\n        }\r\n\r\n        function parseOptions(opts) {\r\n\r\n            $.extend(true, options, opts);\r\n\r\n            // $.extend merges arrays, rather than replacing them.  When less\r\n            // colors are provided than the size of the default palette, we\r\n            // end up with those colors plus the remaining defaults, which is\r\n            // not expected behavior; avoid it by replacing them here.\r\n\r\n            if (opts && opts.colors) {\r\n            \toptions.colors = opts.colors;\r\n            }\r\n\r\n            if (options.xaxis.color == null)\r\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\r\n            if (options.yaxis.color == null)\r\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\r\n\r\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\r\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\r\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\r\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\r\n\r\n            if (options.grid.borderColor == null)\r\n                options.grid.borderColor = options.grid.color;\r\n            if (options.grid.tickColor == null)\r\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\r\n\r\n            // Fill in defaults for axis options, including any unspecified\r\n            // font-spec fields, if a font-spec was provided.\r\n\r\n            // If no x/y axis options were provided, create one of each anyway,\r\n            // since the rest of the code assumes that they exist.\r\n\r\n            var i, axisOptions, axisCount,\r\n                fontSize = placeholder.css(\"font-size\"),\r\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\r\n                fontDefaults = {\r\n                    style: placeholder.css(\"font-style\"),\r\n                    size: Math.round(0.8 * fontSizeDefault),\r\n                    variant: placeholder.css(\"font-variant\"),\r\n                    weight: placeholder.css(\"font-weight\"),\r\n                    family: placeholder.css(\"font-family\")\r\n                };\r\n\r\n            axisCount = options.xaxes.length || 1;\r\n            for (i = 0; i < axisCount; ++i) {\r\n\r\n                axisOptions = options.xaxes[i];\r\n                if (axisOptions && !axisOptions.tickColor) {\r\n                    axisOptions.tickColor = axisOptions.color;\r\n                }\r\n\r\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\r\n                options.xaxes[i] = axisOptions;\r\n\r\n                if (axisOptions.font) {\r\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\r\n                    if (!axisOptions.font.color) {\r\n                        axisOptions.font.color = axisOptions.color;\r\n                    }\r\n                    if (!axisOptions.font.lineHeight) {\r\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\r\n                    }\r\n                }\r\n            }\r\n\r\n            axisCount = options.yaxes.length || 1;\r\n            for (i = 0; i < axisCount; ++i) {\r\n\r\n                axisOptions = options.yaxes[i];\r\n                if (axisOptions && !axisOptions.tickColor) {\r\n                    axisOptions.tickColor = axisOptions.color;\r\n                }\r\n\r\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\r\n                options.yaxes[i] = axisOptions;\r\n\r\n                if (axisOptions.font) {\r\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\r\n                    if (!axisOptions.font.color) {\r\n                        axisOptions.font.color = axisOptions.color;\r\n                    }\r\n                    if (!axisOptions.font.lineHeight) {\r\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // backwards compatibility, to be removed in future\r\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\r\n                options.xaxis.ticks = options.xaxis.noTicks;\r\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\r\n                options.yaxis.ticks = options.yaxis.noTicks;\r\n            if (options.x2axis) {\r\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\r\n                options.xaxes[1].position = \"top\";\r\n                // Override the inherit to allow the axis to auto-scale\r\n                if (options.x2axis.min == null) {\r\n                    options.xaxes[1].min = null;\r\n                }\r\n                if (options.x2axis.max == null) {\r\n                    options.xaxes[1].max = null;\r\n                }\r\n            }\r\n            if (options.y2axis) {\r\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\r\n                options.yaxes[1].position = \"right\";\r\n                // Override the inherit to allow the axis to auto-scale\r\n                if (options.y2axis.min == null) {\r\n                    options.yaxes[1].min = null;\r\n                }\r\n                if (options.y2axis.max == null) {\r\n                    options.yaxes[1].max = null;\r\n                }\r\n            }\r\n            if (options.grid.coloredAreas)\r\n                options.grid.markings = options.grid.coloredAreas;\r\n            if (options.grid.coloredAreasColor)\r\n                options.grid.markingsColor = options.grid.coloredAreasColor;\r\n            if (options.lines)\r\n                $.extend(true, options.series.lines, options.lines);\r\n            if (options.points)\r\n                $.extend(true, options.series.points, options.points);\r\n            if (options.bars)\r\n                $.extend(true, options.series.bars, options.bars);\r\n            if (options.shadowSize != null)\r\n                options.series.shadowSize = options.shadowSize;\r\n            if (options.highlightColor != null)\r\n                options.series.highlightColor = options.highlightColor;\r\n\r\n            // save options on axes for future reference\r\n            for (i = 0; i < options.xaxes.length; ++i)\r\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\r\n            for (i = 0; i < options.yaxes.length; ++i)\r\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\r\n\r\n            // add hooks from options\r\n            for (var n in hooks)\r\n                if (options.hooks[n] && options.hooks[n].length)\r\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\r\n\r\n            executeHooks(hooks.processOptions, [options]);\r\n        }\r\n\r\n        function setData(d) {\r\n            series = parseData(d);\r\n            fillInSeriesOptions();\r\n            processData();\r\n        }\r\n\r\n        function parseData(d) {\r\n            var res = [];\r\n            for (var i = 0; i < d.length; ++i) {\r\n                var s = $.extend(true, {}, options.series);\r\n\r\n                if (d[i].data != null) {\r\n                    s.data = d[i].data; // move the data instead of deep-copy\r\n                    delete d[i].data;\r\n\r\n                    $.extend(true, s, d[i]);\r\n\r\n                    d[i].data = s.data;\r\n                }\r\n                else\r\n                    s.data = d[i];\r\n                res.push(s);\r\n            }\r\n\r\n            return res;\r\n        }\r\n\r\n        function axisNumber(obj, coord) {\r\n            var a = obj[coord + \"axis\"];\r\n            if (typeof a == \"object\") // if we got a real axis, extract number\r\n                a = a.n;\r\n            if (typeof a != \"number\")\r\n                a = 1; // default to first axis\r\n            return a;\r\n        }\r\n\r\n        function allAxes() {\r\n            // return flat array without annoying null entries\r\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\r\n        }\r\n\r\n        function canvasToAxisCoords(pos) {\r\n            // return an object with x/y corresponding to all used axes\r\n            var res = {}, i, axis;\r\n            for (i = 0; i < xaxes.length; ++i) {\r\n                axis = xaxes[i];\r\n                if (axis && axis.used)\r\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\r\n            }\r\n\r\n            for (i = 0; i < yaxes.length; ++i) {\r\n                axis = yaxes[i];\r\n                if (axis && axis.used)\r\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\r\n            }\r\n\r\n            if (res.x1 !== undefined)\r\n                res.x = res.x1;\r\n            if (res.y1 !== undefined)\r\n                res.y = res.y1;\r\n\r\n            return res;\r\n        }\r\n\r\n        function axisToCanvasCoords(pos) {\r\n            // get canvas coords from the first pair of x/y found in pos\r\n            var res = {}, i, axis, key;\r\n\r\n            for (i = 0; i < xaxes.length; ++i) {\r\n                axis = xaxes[i];\r\n                if (axis && axis.used) {\r\n                    key = \"x\" + axis.n;\r\n                    if (pos[key] == null && axis.n == 1)\r\n                        key = \"x\";\r\n\r\n                    if (pos[key] != null) {\r\n                        res.left = axis.p2c(pos[key]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (i = 0; i < yaxes.length; ++i) {\r\n                axis = yaxes[i];\r\n                if (axis && axis.used) {\r\n                    key = \"y\" + axis.n;\r\n                    if (pos[key] == null && axis.n == 1)\r\n                        key = \"y\";\r\n\r\n                    if (pos[key] != null) {\r\n                        res.top = axis.p2c(pos[key]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return res;\r\n        }\r\n\r\n        function getOrCreateAxis(axes, number) {\r\n            if (!axes[number - 1])\r\n                axes[number - 1] = {\r\n                    n: number, // save the number for future reference\r\n                    direction: axes == xaxes ? \"x\" : \"y\",\r\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\r\n                };\r\n\r\n            return axes[number - 1];\r\n        }\r\n\r\n        function fillInSeriesOptions() {\r\n\r\n            var neededColors = series.length, maxIndex = -1, i;\r\n\r\n            // Subtract the number of series that already have fixed colors or\r\n            // color indexes from the number that we still need to generate.\r\n\r\n            for (i = 0; i < series.length; ++i) {\r\n                var sc = series[i].color;\r\n                if (sc != null) {\r\n                    neededColors--;\r\n                    if (typeof sc == \"number\" && sc > maxIndex) {\r\n                        maxIndex = sc;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // If any of the series have fixed color indexes, then we need to\r\n            // generate at least as many colors as the highest index.\r\n\r\n            if (neededColors <= maxIndex) {\r\n                neededColors = maxIndex + 1;\r\n            }\r\n\r\n            // Generate all the colors, using first the option colors and then\r\n            // variations on those colors once they're exhausted.\r\n\r\n            var c, colors = [], colorPool = options.colors,\r\n                colorPoolSize = colorPool.length, variation = 0;\r\n\r\n            for (i = 0; i < neededColors; i++) {\r\n\r\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\r\n\r\n                // Each time we exhaust the colors in the pool we adjust\r\n                // a scaling factor used to produce more variations on\r\n                // those colors. The factor alternates negative/positive\r\n                // to produce lighter/darker colors.\r\n\r\n                // Reset the variation after every few cycles, or else\r\n                // it will end up producing only white or black colors.\r\n\r\n                if (i % colorPoolSize == 0 && i) {\r\n                    if (variation >= 0) {\r\n                        if (variation < 0.5) {\r\n                            variation = -variation - 0.2;\r\n                        } else variation = 0;\r\n                    } else variation = -variation;\r\n                }\r\n\r\n                colors[i] = c.scale('rgb', 1 + variation);\r\n            }\r\n\r\n            // Finalize the series options, filling in their colors\r\n\r\n            var colori = 0, s;\r\n            for (i = 0; i < series.length; ++i) {\r\n                s = series[i];\r\n\r\n                // assign colors\r\n                if (s.color == null) {\r\n                    s.color = colors[colori].toString();\r\n                    ++colori;\r\n                }\r\n                else if (typeof s.color == \"number\")\r\n                    s.color = colors[s.color].toString();\r\n\r\n                // turn on lines automatically in case nothing is set\r\n                if (s.lines.show == null) {\r\n                    var v, show = true;\r\n                    for (v in s)\r\n                        if (s[v] && s[v].show) {\r\n                            show = false;\r\n                            break;\r\n                        }\r\n                    if (show)\r\n                        s.lines.show = true;\r\n                }\r\n\r\n                // If nothing was provided for lines.zero, default it to match\r\n                // lines.fill, since areas by default should extend to zero.\r\n\r\n                if (s.lines.zero == null) {\r\n                    s.lines.zero = !!s.lines.fill;\r\n                }\r\n\r\n                // setup axes\r\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\r\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\r\n            }\r\n        }\r\n\r\n        function processData() {\r\n            var topSentry = Number.POSITIVE_INFINITY,\r\n                bottomSentry = Number.NEGATIVE_INFINITY,\r\n                fakeInfinity = Number.MAX_VALUE,\r\n                i, j, k, m, length,\r\n                s, points, ps, x, y, axis, val, f, p,\r\n                data, format;\r\n\r\n            function updateAxis(axis, min, max) {\r\n                if (min < axis.datamin && min != -fakeInfinity)\r\n                    axis.datamin = min;\r\n                if (max > axis.datamax && max != fakeInfinity)\r\n                    axis.datamax = max;\r\n            }\r\n\r\n            $.each(allAxes(), function (_, axis) {\r\n                // init axis\r\n                axis.datamin = topSentry;\r\n                axis.datamax = bottomSentry;\r\n                axis.used = false;\r\n            });\r\n\r\n            for (i = 0; i < series.length; ++i) {\r\n                s = series[i];\r\n                s.datapoints = { points: [] };\r\n\r\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\r\n            }\r\n\r\n            // first pass: clean and copy data\r\n            for (i = 0; i < series.length; ++i) {\r\n                s = series[i];\r\n\r\n                data = s.data;\r\n                format = s.datapoints.format;\r\n\r\n                if (!format) {\r\n                    format = [];\r\n                    // find out how to copy\r\n                    format.push({ x: true, number: true, required: true });\r\n                    format.push({ y: true, number: true, required: true });\r\n\r\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\r\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\r\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\r\n                        if (s.bars.horizontal) {\r\n                            delete format[format.length - 1].y;\r\n                            format[format.length - 1].x = true;\r\n                        }\r\n                    }\r\n\r\n                    s.datapoints.format = format;\r\n                }\r\n\r\n                if (s.datapoints.pointsize != null)\r\n                    continue; // already filled in\r\n\r\n                s.datapoints.pointsize = format.length;\r\n\r\n                ps = s.datapoints.pointsize;\r\n                points = s.datapoints.points;\r\n\r\n                var insertSteps = s.lines.show && s.lines.steps;\r\n                s.xaxis.used = s.yaxis.used = true;\r\n\r\n                for (j = k = 0; j < data.length; ++j, k += ps) {\r\n                    p = data[j];\r\n\r\n                    var nullify = p == null;\r\n                    if (!nullify) {\r\n                        for (m = 0; m < ps; ++m) {\r\n                            val = p[m];\r\n                            f = format[m];\r\n\r\n                            if (f) {\r\n                                if (f.number && val != null) {\r\n                                    val = +val; // convert to number\r\n                                    if (isNaN(val))\r\n                                        val = null;\r\n                                    else if (val == Infinity)\r\n                                        val = fakeInfinity;\r\n                                    else if (val == -Infinity)\r\n                                        val = -fakeInfinity;\r\n                                }\r\n\r\n                                if (val == null) {\r\n                                    if (f.required)\r\n                                        nullify = true;\r\n\r\n                                    if (f.defaultValue != null)\r\n                                        val = f.defaultValue;\r\n                                }\r\n                            }\r\n\r\n                            points[k + m] = val;\r\n                        }\r\n                    }\r\n\r\n                    if (nullify) {\r\n                        for (m = 0; m < ps; ++m) {\r\n                            val = points[k + m];\r\n                            if (val != null) {\r\n                                f = format[m];\r\n                                // extract min/max info\r\n                                if (f.autoscale !== false) {\r\n                                    if (f.x) {\r\n                                        updateAxis(s.xaxis, val, val);\r\n                                    }\r\n                                    if (f.y) {\r\n                                        updateAxis(s.yaxis, val, val);\r\n                                    }\r\n                                }\r\n                            }\r\n                            points[k + m] = null;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // a little bit of line specific stuff that\r\n                        // perhaps shouldn't be here, but lacking\r\n                        // better means...\r\n                        if (insertSteps && k > 0\r\n                            && points[k - ps] != null\r\n                            && points[k - ps] != points[k]\r\n                            && points[k - ps + 1] != points[k + 1]) {\r\n                            // copy the point to make room for a middle point\r\n                            for (m = 0; m < ps; ++m)\r\n                                points[k + ps + m] = points[k + m];\r\n\r\n                            // middle point has same y\r\n                            points[k + 1] = points[k - ps + 1];\r\n\r\n                            // we've added a point, better reflect that\r\n                            k += ps;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // give the hooks a chance to run\r\n            for (i = 0; i < series.length; ++i) {\r\n                s = series[i];\r\n\r\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\r\n            }\r\n\r\n            // second pass: find datamax/datamin for auto-scaling\r\n            for (i = 0; i < series.length; ++i) {\r\n                s = series[i];\r\n                points = s.datapoints.points;\r\n                ps = s.datapoints.pointsize;\r\n                format = s.datapoints.format;\r\n\r\n                var xmin = topSentry, ymin = topSentry,\r\n                    xmax = bottomSentry, ymax = bottomSentry;\r\n\r\n                for (j = 0; j < points.length; j += ps) {\r\n                    if (points[j] == null)\r\n                        continue;\r\n\r\n                    for (m = 0; m < ps; ++m) {\r\n                        val = points[j + m];\r\n                        f = format[m];\r\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\r\n                            continue;\r\n\r\n                        if (f.x) {\r\n                            if (val < xmin)\r\n                                xmin = val;\r\n                            if (val > xmax)\r\n                                xmax = val;\r\n                        }\r\n                        if (f.y) {\r\n                            if (val < ymin)\r\n                                ymin = val;\r\n                            if (val > ymax)\r\n                                ymax = val;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (s.bars.show) {\r\n                    // make sure we got room for the bar on the dancing floor\r\n                    var delta;\r\n\r\n                    switch (s.bars.align) {\r\n                        case \"left\":\r\n                            delta = 0;\r\n                            break;\r\n                        case \"right\":\r\n                            delta = -s.bars.barWidth;\r\n                            break;\r\n                        default:\r\n                            delta = -s.bars.barWidth / 2;\r\n                    }\r\n\r\n                    if (s.bars.horizontal) {\r\n                        ymin += delta;\r\n                        ymax += delta + s.bars.barWidth;\r\n                    }\r\n                    else {\r\n                        xmin += delta;\r\n                        xmax += delta + s.bars.barWidth;\r\n                    }\r\n                }\r\n\r\n                updateAxis(s.xaxis, xmin, xmax);\r\n                updateAxis(s.yaxis, ymin, ymax);\r\n            }\r\n\r\n            $.each(allAxes(), function (_, axis) {\r\n                if (axis.datamin == topSentry)\r\n                    axis.datamin = null;\r\n                if (axis.datamax == bottomSentry)\r\n                    axis.datamax = null;\r\n            });\r\n        }\r\n\r\n        function setupCanvases() {\r\n\r\n            // Make sure the placeholder is clear of everything except canvases\r\n            // from a previous plot in this container that we'll try to re-use.\r\n\r\n            placeholder.css(\"padding\", 0) // padding messes up the positioning\r\n                .children().filter(function(){\r\n                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\r\n                }).remove();\r\n\r\n            if (placeholder.css(\"position\") == 'static')\r\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\r\n\r\n            surface = new Canvas(\"flot-base\", placeholder);\r\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\r\n\r\n            ctx = surface.context;\r\n            octx = overlay.context;\r\n\r\n            // define which element we're listening for events on\r\n            eventHolder = $(overlay.element).unbind();\r\n\r\n            // If we're re-using a plot object, shut down the old one\r\n\r\n            var existing = placeholder.data(\"plot\");\r\n\r\n            if (existing) {\r\n                existing.shutdown();\r\n                overlay.clear();\r\n            }\r\n\r\n            // save in case we get replotted\r\n            placeholder.data(\"plot\", plot);\r\n        }\r\n\r\n        function bindEvents() {\r\n            // bind events\r\n            if (options.grid.hoverable) {\r\n                eventHolder.mousemove(onMouseMove);\r\n\r\n                // Use bind, rather than .mouseleave, because we officially\r\n                // still support jQuery 1.2.6, which doesn't define a shortcut\r\n                // for mouseenter or mouseleave.  This was a bug/oversight that\r\n                // was fixed somewhere around 1.3.x.  We can return to using\r\n                // .mouseleave when we drop support for 1.2.6.\r\n\r\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\r\n            }\r\n\r\n            if (options.grid.clickable)\r\n                eventHolder.click(onClick);\r\n\r\n            executeHooks(hooks.bindEvents, [eventHolder]);\r\n        }\r\n\r\n        function shutdown() {\r\n            if (redrawTimeout)\r\n                clearTimeout(redrawTimeout);\r\n\r\n            eventHolder.unbind(\"mousemove\", onMouseMove);\r\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\r\n            eventHolder.unbind(\"click\", onClick);\r\n\r\n            executeHooks(hooks.shutdown, [eventHolder]);\r\n        }\r\n\r\n        function setTransformationHelpers(axis) {\r\n            // set helper functions on the axis, assumes plot area\r\n            // has been computed already\r\n\r\n            function identity(x) { return x; }\r\n\r\n            var s, m, t = axis.options.transform || identity,\r\n                it = axis.options.inverseTransform;\r\n\r\n            // precompute how much the axis is scaling a point\r\n            // in canvas space\r\n            if (axis.direction == \"x\") {\r\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\r\n                m = Math.min(t(axis.max), t(axis.min));\r\n            }\r\n            else {\r\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\r\n                s = -s;\r\n                m = Math.max(t(axis.max), t(axis.min));\r\n            }\r\n\r\n            // data point to canvas coordinate\r\n            if (t == identity) // slight optimization\r\n                axis.p2c = function (p) { return (p - m) * s; };\r\n            else\r\n                axis.p2c = function (p) { return (t(p) - m) * s; };\r\n            // canvas coordinate to data point\r\n            if (!it)\r\n                axis.c2p = function (c) { return m + c / s; };\r\n            else\r\n                axis.c2p = function (c) { return it(m + c / s); };\r\n        }\r\n\r\n        function measureTickLabels(axis) {\r\n\r\n            var opts = axis.options,\r\n                ticks = axis.ticks || [],\r\n                labelWidth = opts.labelWidth || 0,\r\n                labelHeight = opts.labelHeight || 0,\r\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\r\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\r\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\r\n                font = opts.font || \"flot-tick-label tickLabel\";\r\n\r\n            for (var i = 0; i < ticks.length; ++i) {\r\n\r\n                var t = ticks[i];\r\n\r\n                if (!t.label)\r\n                    continue;\r\n\r\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\r\n\r\n                labelWidth = Math.max(labelWidth, info.width);\r\n                labelHeight = Math.max(labelHeight, info.height);\r\n            }\r\n\r\n            axis.labelWidth = opts.labelWidth || labelWidth;\r\n            axis.labelHeight = opts.labelHeight || labelHeight;\r\n        }\r\n\r\n        function allocateAxisBoxFirstPhase(axis) {\r\n            // find the bounding box of the axis by looking at label\r\n            // widths/heights and ticks, make room by diminishing the\r\n            // plotOffset; this first phase only looks at one\r\n            // dimension per axis, the other dimension depends on the\r\n            // other axes so will have to wait\r\n\r\n            var lw = axis.labelWidth,\r\n                lh = axis.labelHeight,\r\n                pos = axis.options.position,\r\n                isXAxis = axis.direction === \"x\",\r\n                tickLength = axis.options.tickLength,\r\n                axisMargin = options.grid.axisMargin,\r\n                padding = options.grid.labelMargin,\r\n                innermost = true,\r\n                outermost = true,\r\n                first = true,\r\n                found = false;\r\n\r\n            // Determine the axis's position in its direction and on its side\r\n\r\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\r\n                if (a && (a.show || a.reserveSpace)) {\r\n                    if (a === axis) {\r\n                        found = true;\r\n                    } else if (a.options.position === pos) {\r\n                        if (found) {\r\n                            outermost = false;\r\n                        } else {\r\n                            innermost = false;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        first = false;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // The outermost axis on each side has no margin\r\n\r\n            if (outermost) {\r\n                axisMargin = 0;\r\n            }\r\n\r\n            // The ticks for the first axis in each direction stretch across\r\n\r\n            if (tickLength == null) {\r\n                tickLength = first ? \"full\" : 5;\r\n            }\r\n\r\n            if (!isNaN(+tickLength))\r\n                padding += +tickLength;\r\n\r\n            if (isXAxis) {\r\n                lh += padding;\r\n\r\n                if (pos == \"bottom\") {\r\n                    plotOffset.bottom += lh + axisMargin;\r\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\r\n                }\r\n                else {\r\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\r\n                    plotOffset.top += lh + axisMargin;\r\n                }\r\n            }\r\n            else {\r\n                lw += padding;\r\n\r\n                if (pos == \"left\") {\r\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\r\n                    plotOffset.left += lw + axisMargin;\r\n                }\r\n                else {\r\n                    plotOffset.right += lw + axisMargin;\r\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\r\n                }\r\n            }\r\n\r\n             // save for future reference\r\n            axis.position = pos;\r\n            axis.tickLength = tickLength;\r\n            axis.box.padding = padding;\r\n            axis.innermost = innermost;\r\n        }\r\n\r\n        function allocateAxisBoxSecondPhase(axis) {\r\n            // now that all axis boxes have been placed in one\r\n            // dimension, we can set the remaining dimension coordinates\r\n            if (axis.direction == \"x\") {\r\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\r\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\r\n            }\r\n            else {\r\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\r\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\r\n            }\r\n        }\r\n\r\n        function adjustLayoutForThingsStickingOut() {\r\n            // possibly adjust plot offset to ensure everything stays\r\n            // inside the canvas and isn't clipped off\r\n\r\n            var minMargin = options.grid.minBorderMargin,\r\n                axis, i;\r\n\r\n            // check stuff from the plot (FIXME: this should just read\r\n            // a value from the series, otherwise it's impossible to\r\n            // customize)\r\n            if (minMargin == null) {\r\n                minMargin = 0;\r\n                for (i = 0; i < series.length; ++i)\r\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\r\n            }\r\n\r\n            var margins = {\r\n                left: minMargin,\r\n                right: minMargin,\r\n                top: minMargin,\r\n                bottom: minMargin\r\n            };\r\n\r\n            // check axis labels, note we don't check the actual\r\n            // labels but instead use the overall width/height to not\r\n            // jump as much around with replots\r\n            $.each(allAxes(), function (_, axis) {\r\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\r\n                    if (axis.direction === \"x\") {\r\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\r\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\r\n                    } else {\r\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\r\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\r\n                    }\r\n                }\r\n            });\r\n\r\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\r\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\r\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\r\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\r\n        }\r\n\r\n        function setupGrid() {\r\n            var i, axes = allAxes(), showGrid = options.grid.show;\r\n\r\n            // Initialize the plot's offset from the edge of the canvas\r\n\r\n            for (var a in plotOffset) {\r\n                var margin = options.grid.margin || 0;\r\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\r\n            }\r\n\r\n            executeHooks(hooks.processOffset, [plotOffset]);\r\n\r\n            // If the grid is visible, add its border width to the offset\r\n\r\n            for (var a in plotOffset) {\r\n                if(typeof(options.grid.borderWidth) == \"object\") {\r\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\r\n                }\r\n                else {\r\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\r\n                }\r\n            }\r\n\r\n            $.each(axes, function (_, axis) {\r\n                var axisOpts = axis.options;\r\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\r\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\r\n                setRange(axis);\r\n            });\r\n\r\n            if (showGrid) {\r\n\r\n                var allocatedAxes = $.grep(axes, function (axis) {\r\n                    return axis.show || axis.reserveSpace;\r\n                });\r\n\r\n                $.each(allocatedAxes, function (_, axis) {\r\n                    // make the ticks\r\n                    setupTickGeneration(axis);\r\n                    setTicks(axis);\r\n                    snapRangeToTicks(axis, axis.ticks);\r\n                    // find labelWidth/Height for axis\r\n                    measureTickLabels(axis);\r\n                });\r\n\r\n                // with all dimensions calculated, we can compute the\r\n                // axis bounding boxes, start from the outside\r\n                // (reverse order)\r\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\r\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\r\n\r\n                // make sure we've got enough space for things that\r\n                // might stick out\r\n                adjustLayoutForThingsStickingOut();\r\n\r\n                $.each(allocatedAxes, function (_, axis) {\r\n                    allocateAxisBoxSecondPhase(axis);\r\n                });\r\n            }\r\n\r\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\r\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\r\n\r\n            // now we got the proper plot dimensions, we can compute the scaling\r\n            $.each(axes, function (_, axis) {\r\n                setTransformationHelpers(axis);\r\n            });\r\n\r\n            if (showGrid) {\r\n                drawAxisLabels();\r\n            }\r\n\r\n            insertLegend();\r\n        }\r\n\r\n        function setRange(axis) {\r\n            var opts = axis.options,\r\n                min = +(opts.min != null ? opts.min : axis.datamin),\r\n                max = +(opts.max != null ? opts.max : axis.datamax),\r\n                delta = max - min;\r\n\r\n            if (delta == 0.0) {\r\n                // degenerate case\r\n                var widen = max == 0 ? 1 : 0.01;\r\n\r\n                if (opts.min == null)\r\n                    min -= widen;\r\n                // always widen max if we couldn't widen min to ensure we\r\n                // don't fall into min == max which doesn't work\r\n                if (opts.max == null || opts.min != null)\r\n                    max += widen;\r\n            }\r\n            else {\r\n                // consider autoscaling\r\n                var margin = opts.autoscaleMargin;\r\n                if (margin != null) {\r\n                    if (opts.min == null) {\r\n                        min -= delta * margin;\r\n                        // make sure we don't go below zero if all values\r\n                        // are positive\r\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\r\n                            min = 0;\r\n                    }\r\n                    if (opts.max == null) {\r\n                        max += delta * margin;\r\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\r\n                            max = 0;\r\n                    }\r\n                }\r\n            }\r\n            axis.min = min;\r\n            axis.max = max;\r\n        }\r\n\r\n        function setupTickGeneration(axis) {\r\n            var opts = axis.options;\r\n\r\n            // estimate number of ticks\r\n            var noTicks;\r\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\r\n                noTicks = opts.ticks;\r\n            else\r\n                // heuristic based on the model a*sqrt(x) fitted to\r\n                // some data points that seemed reasonable\r\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\r\n\r\n            var delta = (axis.max - axis.min) / noTicks,\r\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\r\n                maxDec = opts.tickDecimals;\r\n\r\n            if (maxDec != null && dec > maxDec) {\r\n                dec = maxDec;\r\n            }\r\n\r\n            var magn = Math.pow(10, -dec),\r\n                norm = delta / magn, // norm is between 1.0 and 10.0\r\n                size;\r\n\r\n            if (norm < 1.5) {\r\n                size = 1;\r\n            } else if (norm < 3) {\r\n                size = 2;\r\n                // special case for 2.5, requires an extra decimal\r\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\r\n                    size = 2.5;\r\n                    ++dec;\r\n                }\r\n            } else if (norm < 7.5) {\r\n                size = 5;\r\n            } else {\r\n                size = 10;\r\n            }\r\n\r\n            size *= magn;\r\n\r\n            if (opts.minTickSize != null && size < opts.minTickSize) {\r\n                size = opts.minTickSize;\r\n            }\r\n\r\n            axis.delta = delta;\r\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\r\n            axis.tickSize = opts.tickSize || size;\r\n\r\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\r\n            // we'll add an especially friendly reminder to make sure they included it.\r\n\r\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\r\n                throw new Error(\"Time mode requires the flot.time plugin.\");\r\n            }\r\n\r\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\r\n            // like flot.time.js.\r\n\r\n            if (!axis.tickGenerator) {\r\n\r\n                axis.tickGenerator = function (axis) {\r\n\r\n                    var ticks = [],\r\n                        start = floorInBase(axis.min, axis.tickSize),\r\n                        i = 0,\r\n                        v = Number.NaN,\r\n                        prev;\r\n\r\n                    do {\r\n                        prev = v;\r\n                        v = start + i * axis.tickSize;\r\n                        ticks.push(v);\r\n                        ++i;\r\n                    } while (v < axis.max && v != prev);\r\n                    return ticks;\r\n                };\r\n\r\n\t\t\t\taxis.tickFormatter = function (value, axis) {\r\n\r\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\r\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\r\n\r\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\r\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\r\n\r\n\t\t\t\t\tif (axis.tickDecimals != null) {\r\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\r\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\r\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\r\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n                    return formatted;\r\n                };\r\n            }\r\n\r\n            if ($.isFunction(opts.tickFormatter))\r\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\r\n\r\n            if (opts.alignTicksWithAxis != null) {\r\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\r\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\r\n                    // consider snapping min/max to outermost nice ticks\r\n                    var niceTicks = axis.tickGenerator(axis);\r\n                    if (niceTicks.length > 0) {\r\n                        if (opts.min == null)\r\n                            axis.min = Math.min(axis.min, niceTicks[0]);\r\n                        if (opts.max == null && niceTicks.length > 1)\r\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\r\n                    }\r\n\r\n                    axis.tickGenerator = function (axis) {\r\n                        // copy ticks, scaled to this axis\r\n                        var ticks = [], v, i;\r\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\r\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\r\n                            v = axis.min + v * (axis.max - axis.min);\r\n                            ticks.push(v);\r\n                        }\r\n                        return ticks;\r\n                    };\r\n\r\n                    // we might need an extra decimal since forced\r\n                    // ticks don't necessarily fit naturally\r\n                    if (!axis.mode && opts.tickDecimals == null) {\r\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\r\n                            ts = axis.tickGenerator(axis);\r\n\r\n                        // only proceed if the tick interval rounded\r\n                        // with an extra decimal doesn't give us a\r\n                        // zero at end\r\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\r\n                            axis.tickDecimals = extraDec;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function setTicks(axis) {\r\n            var oticks = axis.options.ticks, ticks = [];\r\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\r\n                ticks = axis.tickGenerator(axis);\r\n            else if (oticks) {\r\n                if ($.isFunction(oticks))\r\n                    // generate the ticks\r\n                    ticks = oticks(axis);\r\n                else\r\n                    ticks = oticks;\r\n            }\r\n\r\n            // clean up/labelify the supplied ticks, copy them over\r\n            var i, v;\r\n            axis.ticks = [];\r\n            for (i = 0; i < ticks.length; ++i) {\r\n                var label = null;\r\n                var t = ticks[i];\r\n                if (typeof t == \"object\") {\r\n                    v = +t[0];\r\n                    if (t.length > 1)\r\n                        label = t[1];\r\n                }\r\n                else\r\n                    v = +t;\r\n                if (label == null)\r\n                    label = axis.tickFormatter(v, axis);\r\n                if (!isNaN(v))\r\n                    axis.ticks.push({ v: v, label: label });\r\n            }\r\n        }\r\n\r\n        function snapRangeToTicks(axis, ticks) {\r\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\r\n                // snap to ticks\r\n                if (axis.options.min == null)\r\n                    axis.min = Math.min(axis.min, ticks[0].v);\r\n                if (axis.options.max == null && ticks.length > 1)\r\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\r\n            }\r\n        }\r\n\r\n        function draw() {\r\n\r\n            surface.clear();\r\n\r\n            executeHooks(hooks.drawBackground, [ctx]);\r\n\r\n            var grid = options.grid;\r\n\r\n            // draw background, if any\r\n            if (grid.show && grid.backgroundColor)\r\n                drawBackground();\r\n\r\n            if (grid.show && !grid.aboveData) {\r\n                drawGrid();\r\n            }\r\n\r\n            for (var i = 0; i < series.length; ++i) {\r\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\r\n                drawSeries(series[i]);\r\n            }\r\n\r\n            executeHooks(hooks.draw, [ctx]);\r\n\r\n            if (grid.show && grid.aboveData) {\r\n                drawGrid();\r\n            }\r\n\r\n            surface.render();\r\n\r\n            // A draw implies that either the axes or data have changed, so we\r\n            // should probably update the overlay highlights as well.\r\n\r\n            triggerRedrawOverlay();\r\n        }\r\n\r\n        function extractRange(ranges, coord) {\r\n            var axis, from, to, key, axes = allAxes();\r\n\r\n            for (var i = 0; i < axes.length; ++i) {\r\n                axis = axes[i];\r\n                if (axis.direction == coord) {\r\n                    key = coord + axis.n + \"axis\";\r\n                    if (!ranges[key] && axis.n == 1)\r\n                        key = coord + \"axis\"; // support x1axis as xaxis\r\n                    if (ranges[key]) {\r\n                        from = ranges[key].from;\r\n                        to = ranges[key].to;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // backwards-compat stuff - to be removed in future\r\n            if (!ranges[key]) {\r\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\r\n                from = ranges[coord + \"1\"];\r\n                to = ranges[coord + \"2\"];\r\n            }\r\n\r\n            // auto-reverse as an added bonus\r\n            if (from != null && to != null && from > to) {\r\n                var tmp = from;\r\n                from = to;\r\n                to = tmp;\r\n            }\r\n\r\n            return { from: from, to: to, axis: axis };\r\n        }\r\n\r\n        function drawBackground() {\r\n            ctx.save();\r\n            ctx.translate(plotOffset.left, plotOffset.top);\r\n\r\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\r\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\r\n            ctx.restore();\r\n        }\r\n\r\n        function drawGrid() {\r\n            var i, axes, bw, bc;\r\n\r\n            ctx.save();\r\n            ctx.translate(plotOffset.left, plotOffset.top);\r\n\r\n            // draw markings\r\n            var markings = options.grid.markings;\r\n            if (markings) {\r\n                if ($.isFunction(markings)) {\r\n                    axes = plot.getAxes();\r\n                    // xmin etc. is backwards compatibility, to be\r\n                    // removed in the future\r\n                    axes.xmin = axes.xaxis.min;\r\n                    axes.xmax = axes.xaxis.max;\r\n                    axes.ymin = axes.yaxis.min;\r\n                    axes.ymax = axes.yaxis.max;\r\n\r\n                    markings = markings(axes);\r\n                }\r\n\r\n                for (i = 0; i < markings.length; ++i) {\r\n                    var m = markings[i],\r\n                        xrange = extractRange(m, \"x\"),\r\n                        yrange = extractRange(m, \"y\");\r\n\r\n                    // fill in missing\r\n                    if (xrange.from == null)\r\n                        xrange.from = xrange.axis.min;\r\n                    if (xrange.to == null)\r\n                        xrange.to = xrange.axis.max;\r\n                    if (yrange.from == null)\r\n                        yrange.from = yrange.axis.min;\r\n                    if (yrange.to == null)\r\n                        yrange.to = yrange.axis.max;\r\n\r\n                    // clip\r\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\r\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\r\n                        continue;\r\n\r\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\r\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\r\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\r\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\r\n\r\n                    var xequal = xrange.from === xrange.to,\r\n                        yequal = yrange.from === yrange.to;\r\n\r\n                    if (xequal && yequal) {\r\n                        continue;\r\n                    }\r\n\r\n                    // then draw\r\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\r\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\r\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\r\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\r\n\r\n                    if (xequal || yequal) {\r\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\r\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\r\n                        ctx.beginPath();\r\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\r\n                        ctx.lineWidth = lineWidth;\r\n                        if (xequal) {\r\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\r\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\r\n                        } else {\r\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\r\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);                            \r\n                        }\r\n                        ctx.stroke();\r\n                    } else {\r\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\r\n                        ctx.fillRect(xrange.from, yrange.to,\r\n                                     xrange.to - xrange.from,\r\n                                     yrange.from - yrange.to);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // draw the ticks\r\n            axes = allAxes();\r\n            bw = options.grid.borderWidth;\r\n\r\n            for (var j = 0; j < axes.length; ++j) {\r\n                var axis = axes[j], box = axis.box,\r\n                    t = axis.tickLength, x, y, xoff, yoff;\r\n                if (!axis.show || axis.ticks.length == 0)\r\n                    continue;\r\n\r\n                ctx.lineWidth = 1;\r\n\r\n                // find the edges\r\n                if (axis.direction == \"x\") {\r\n                    x = 0;\r\n                    if (t == \"full\")\r\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\r\n                    else\r\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\r\n                }\r\n                else {\r\n                    y = 0;\r\n                    if (t == \"full\")\r\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\r\n                    else\r\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\r\n                }\r\n\r\n                // draw tick bar\r\n                if (!axis.innermost) {\r\n                    ctx.strokeStyle = axis.options.color;\r\n                    ctx.beginPath();\r\n                    xoff = yoff = 0;\r\n                    if (axis.direction == \"x\")\r\n                        xoff = plotWidth + 1;\r\n                    else\r\n                        yoff = plotHeight + 1;\r\n\r\n                    if (ctx.lineWidth == 1) {\r\n                        if (axis.direction == \"x\") {\r\n                            y = Math.floor(y) + 0.5;\r\n                        } else {\r\n                            x = Math.floor(x) + 0.5;\r\n                        }\r\n                    }\r\n\r\n                    ctx.moveTo(x, y);\r\n                    ctx.lineTo(x + xoff, y + yoff);\r\n                    ctx.stroke();\r\n                }\r\n\r\n                // draw ticks\r\n\r\n                ctx.strokeStyle = axis.options.tickColor;\r\n\r\n                ctx.beginPath();\r\n                for (i = 0; i < axis.ticks.length; ++i) {\r\n                    var v = axis.ticks[i].v;\r\n\r\n                    xoff = yoff = 0;\r\n\r\n                    if (isNaN(v) || v < axis.min || v > axis.max\r\n                        // skip those lying on the axes if we got a border\r\n                        || (t == \"full\"\r\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\r\n                            && (v == axis.min || v == axis.max)))\r\n                        continue;\r\n\r\n                    if (axis.direction == \"x\") {\r\n                        x = axis.p2c(v);\r\n                        yoff = t == \"full\" ? -plotHeight : t;\r\n\r\n                        if (axis.position == \"top\")\r\n                            yoff = -yoff;\r\n                    }\r\n                    else {\r\n                        y = axis.p2c(v);\r\n                        xoff = t == \"full\" ? -plotWidth : t;\r\n\r\n                        if (axis.position == \"left\")\r\n                            xoff = -xoff;\r\n                    }\r\n\r\n                    if (ctx.lineWidth == 1) {\r\n                        if (axis.direction == \"x\")\r\n                            x = Math.floor(x) + 0.5;\r\n                        else\r\n                            y = Math.floor(y) + 0.5;\r\n                    }\r\n\r\n                    ctx.moveTo(x, y);\r\n                    ctx.lineTo(x + xoff, y + yoff);\r\n                }\r\n\r\n                ctx.stroke();\r\n            }\r\n\r\n\r\n            // draw border\r\n            if (bw) {\r\n                // If either borderWidth or borderColor is an object, then draw the border\r\n                // line by line instead of as one rectangle\r\n                bc = options.grid.borderColor;\r\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\r\n                    if (typeof bw !== \"object\") {\r\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\r\n                    }\r\n                    if (typeof bc !== \"object\") {\r\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\r\n                    }\r\n\r\n                    if (bw.top > 0) {\r\n                        ctx.strokeStyle = bc.top;\r\n                        ctx.lineWidth = bw.top;\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\r\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\r\n                        ctx.stroke();\r\n                    }\r\n\r\n                    if (bw.right > 0) {\r\n                        ctx.strokeStyle = bc.right;\r\n                        ctx.lineWidth = bw.right;\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\r\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\r\n                        ctx.stroke();\r\n                    }\r\n\r\n                    if (bw.bottom > 0) {\r\n                        ctx.strokeStyle = bc.bottom;\r\n                        ctx.lineWidth = bw.bottom;\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\r\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\r\n                        ctx.stroke();\r\n                    }\r\n\r\n                    if (bw.left > 0) {\r\n                        ctx.strokeStyle = bc.left;\r\n                        ctx.lineWidth = bw.left;\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\r\n                        ctx.lineTo(0- bw.left/2, 0);\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n                else {\r\n                    ctx.lineWidth = bw;\r\n                    ctx.strokeStyle = options.grid.borderColor;\r\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\r\n                }\r\n            }\r\n\r\n            ctx.restore();\r\n        }\r\n\r\n        function drawAxisLabels() {\r\n\r\n            $.each(allAxes(), function (_, axis) {\r\n                var box = axis.box,\r\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\r\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\r\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\r\n                    tick, x, y, halign, valign;\r\n\r\n                // Remove text before checking for axis.show and ticks.length;\r\n                // otherwise plugins, like flot-tickrotor, that draw their own\r\n                // tick labels will end up with both theirs and the defaults.\r\n\r\n                surface.removeText(layer);\r\n\r\n                if (!axis.show || axis.ticks.length == 0)\r\n                    return;\r\n\r\n                for (var i = 0; i < axis.ticks.length; ++i) {\r\n\r\n                    tick = axis.ticks[i];\r\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\r\n                        continue;\r\n\r\n                    if (axis.direction == \"x\") {\r\n                        halign = \"center\";\r\n                        x = plotOffset.left + axis.p2c(tick.v);\r\n                        if (axis.position == \"bottom\") {\r\n                            y = box.top + box.padding;\r\n                        } else {\r\n                            y = box.top + box.height - box.padding;\r\n                            valign = \"bottom\";\r\n                        }\r\n                    } else {\r\n                        valign = \"middle\";\r\n                        y = plotOffset.top + axis.p2c(tick.v);\r\n                        if (axis.position == \"left\") {\r\n                            x = box.left + box.width - box.padding;\r\n                            halign = \"right\";\r\n                        } else {\r\n                            x = box.left + box.padding;\r\n                        }\r\n                    }\r\n\r\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\r\n                }\r\n            });\r\n        }\r\n\r\n        function drawSeries(series) {\r\n            if (series.lines.show)\r\n                drawSeriesLines(series);\r\n            if (series.bars.show)\r\n                drawSeriesBars(series);\r\n            if (series.points.show)\r\n                drawSeriesPoints(series);\r\n        }\r\n\r\n        function drawSeriesLines(series) {\r\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\r\n                var points = datapoints.points,\r\n                    ps = datapoints.pointsize,\r\n                    prevx = null, prevy = null;\r\n\r\n                ctx.beginPath();\r\n                for (var i = ps; i < points.length; i += ps) {\r\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\r\n                        x2 = points[i], y2 = points[i + 1];\r\n\r\n                    if (x1 == null || x2 == null)\r\n                        continue;\r\n\r\n                    // clip with ymin\r\n                    if (y1 <= y2 && y1 < axisy.min) {\r\n                        if (y2 < axisy.min)\r\n                            continue;   // line segment is outside\r\n                        // compute new intersection point\r\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n                        y1 = axisy.min;\r\n                    }\r\n                    else if (y2 <= y1 && y2 < axisy.min) {\r\n                        if (y1 < axisy.min)\r\n                            continue;\r\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n                        y2 = axisy.min;\r\n                    }\r\n\r\n                    // clip with ymax\r\n                    if (y1 >= y2 && y1 > axisy.max) {\r\n                        if (y2 > axisy.max)\r\n                            continue;\r\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n                        y1 = axisy.max;\r\n                    }\r\n                    else if (y2 >= y1 && y2 > axisy.max) {\r\n                        if (y1 > axisy.max)\r\n                            continue;\r\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n                        y2 = axisy.max;\r\n                    }\r\n\r\n                    // clip with xmin\r\n                    if (x1 <= x2 && x1 < axisx.min) {\r\n                        if (x2 < axisx.min)\r\n                            continue;\r\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\r\n                        x1 = axisx.min;\r\n                    }\r\n                    else if (x2 <= x1 && x2 < axisx.min) {\r\n                        if (x1 < axisx.min)\r\n                            continue;\r\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\r\n                        x2 = axisx.min;\r\n                    }\r\n\r\n                    // clip with xmax\r\n                    if (x1 >= x2 && x1 > axisx.max) {\r\n                        if (x2 > axisx.max)\r\n                            continue;\r\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\r\n                        x1 = axisx.max;\r\n                    }\r\n                    else if (x2 >= x1 && x2 > axisx.max) {\r\n                        if (x1 > axisx.max)\r\n                            continue;\r\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\r\n                        x2 = axisx.max;\r\n                    }\r\n\r\n                    if (x1 != prevx || y1 != prevy)\r\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\r\n\r\n                    prevx = x2;\r\n                    prevy = y2;\r\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\r\n                }\r\n                ctx.stroke();\r\n            }\r\n\r\n            function plotLineArea(datapoints, axisx, axisy) {\r\n                var points = datapoints.points,\r\n                    ps = datapoints.pointsize,\r\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\r\n                    i = 0, top, areaOpen = false,\r\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\r\n\r\n                // we process each segment in two turns, first forward\r\n                // direction to sketch out top, then once we hit the\r\n                // end we go backwards to sketch the bottom\r\n                while (true) {\r\n                    if (ps > 0 && i > points.length + ps)\r\n                        break;\r\n\r\n                    i += ps; // ps is negative if going backwards\r\n\r\n                    var x1 = points[i - ps],\r\n                        y1 = points[i - ps + ypos],\r\n                        x2 = points[i], y2 = points[i + ypos];\r\n\r\n                    if (areaOpen) {\r\n                        if (ps > 0 && x1 != null && x2 == null) {\r\n                            // at turning point\r\n                            segmentEnd = i;\r\n                            ps = -ps;\r\n                            ypos = 2;\r\n                            continue;\r\n                        }\r\n\r\n                        if (ps < 0 && i == segmentStart + ps) {\r\n                            // done with the reverse sweep\r\n                            ctx.fill();\r\n                            areaOpen = false;\r\n                            ps = -ps;\r\n                            ypos = 1;\r\n                            i = segmentStart = segmentEnd + ps;\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    if (x1 == null || x2 == null)\r\n                        continue;\r\n\r\n                    // clip x values\r\n\r\n                    // clip with xmin\r\n                    if (x1 <= x2 && x1 < axisx.min) {\r\n                        if (x2 < axisx.min)\r\n                            continue;\r\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\r\n                        x1 = axisx.min;\r\n                    }\r\n                    else if (x2 <= x1 && x2 < axisx.min) {\r\n                        if (x1 < axisx.min)\r\n                            continue;\r\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\r\n                        x2 = axisx.min;\r\n                    }\r\n\r\n                    // clip with xmax\r\n                    if (x1 >= x2 && x1 > axisx.max) {\r\n                        if (x2 > axisx.max)\r\n                            continue;\r\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\r\n                        x1 = axisx.max;\r\n                    }\r\n                    else if (x2 >= x1 && x2 > axisx.max) {\r\n                        if (x1 > axisx.max)\r\n                            continue;\r\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\r\n                        x2 = axisx.max;\r\n                    }\r\n\r\n                    if (!areaOpen) {\r\n                        // open area\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\r\n                        areaOpen = true;\r\n                    }\r\n\r\n                    // now first check the case where both is outside\r\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\r\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\r\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\r\n                        continue;\r\n                    }\r\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\r\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\r\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\r\n                        continue;\r\n                    }\r\n\r\n                    // else it's a bit more complicated, there might\r\n                    // be a flat maxed out rectangle first, then a\r\n                    // triangular cutout or reverse; to find these\r\n                    // keep track of the current x values\r\n                    var x1old = x1, x2old = x2;\r\n\r\n                    // clip the y values, without shortcutting, we\r\n                    // go through all cases in turn\r\n\r\n                    // clip with ymin\r\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\r\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n                        y1 = axisy.min;\r\n                    }\r\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\r\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n                        y2 = axisy.min;\r\n                    }\r\n\r\n                    // clip with ymax\r\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\r\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n                        y1 = axisy.max;\r\n                    }\r\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\r\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\r\n                        y2 = axisy.max;\r\n                    }\r\n\r\n                    // if the x value was changed we got a rectangle\r\n                    // to fill\r\n                    if (x1 != x1old) {\r\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\r\n                        // it goes to (x1, y1), but we fill that below\r\n                    }\r\n\r\n                    // fill triangular section, this sometimes result\r\n                    // in redundant points if (x1, y1) hasn't changed\r\n                    // from previous line to, but we just ignore that\r\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\r\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\r\n\r\n                    // fill the other rectangle if it's there\r\n                    if (x2 != x2old) {\r\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\r\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\r\n                    }\r\n                }\r\n            }\r\n\r\n            ctx.save();\r\n            ctx.translate(plotOffset.left, plotOffset.top);\r\n            ctx.lineJoin = \"round\";\r\n\r\n            var lw = series.lines.lineWidth,\r\n                sw = series.shadowSize;\r\n            // FIXME: consider another form of shadow when filling is turned on\r\n            if (lw > 0 && sw > 0) {\r\n                // draw shadow as a thick and thin line with transparency\r\n                ctx.lineWidth = sw;\r\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\r\n                // position shadow at angle from the mid of line\r\n                var angle = Math.PI/18;\r\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\r\n                ctx.lineWidth = sw/2;\r\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\r\n            }\r\n\r\n            ctx.lineWidth = lw;\r\n            ctx.strokeStyle = series.color;\r\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\r\n            if (fillStyle) {\r\n                ctx.fillStyle = fillStyle;\r\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\r\n            }\r\n\r\n            if (lw > 0)\r\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\r\n            ctx.restore();\r\n        }\r\n\r\n        function drawSeriesPoints(series) {\r\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\r\n                var points = datapoints.points, ps = datapoints.pointsize;\r\n\r\n                for (var i = 0; i < points.length; i += ps) {\r\n                    var x = points[i], y = points[i + 1];\r\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\r\n                        continue;\r\n\r\n                    ctx.beginPath();\r\n                    x = axisx.p2c(x);\r\n                    y = axisy.p2c(y) + offset;\r\n                    if (symbol == \"circle\")\r\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\r\n                    else\r\n                        symbol(ctx, x, y, radius, shadow);\r\n                    ctx.closePath();\r\n\r\n                    if (fillStyle) {\r\n                        ctx.fillStyle = fillStyle;\r\n                        ctx.fill();\r\n                    }\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n\r\n            ctx.save();\r\n            ctx.translate(plotOffset.left, plotOffset.top);\r\n\r\n            var lw = series.points.lineWidth,\r\n                sw = series.shadowSize,\r\n                radius = series.points.radius,\r\n                symbol = series.points.symbol;\r\n\r\n            // If the user sets the line width to 0, we change it to a very \r\n            // small value. A line width of 0 seems to force the default of 1.\r\n            // Doing the conditional here allows the shadow setting to still be \r\n            // optional even with a lineWidth of 0.\r\n\r\n            if( lw == 0 )\r\n                lw = 0.0001;\r\n\r\n            if (lw > 0 && sw > 0) {\r\n                // draw shadow in two steps\r\n                var w = sw / 2;\r\n                ctx.lineWidth = w;\r\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\r\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\r\n                           series.xaxis, series.yaxis, symbol);\r\n\r\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\r\n                plotPoints(series.datapoints, radius, null, w/2, true,\r\n                           series.xaxis, series.yaxis, symbol);\r\n            }\r\n\r\n            ctx.lineWidth = lw;\r\n            ctx.strokeStyle = series.color;\r\n            plotPoints(series.datapoints, radius,\r\n                       getFillStyle(series.points, series.color), 0, false,\r\n                       series.xaxis, series.yaxis, symbol);\r\n            ctx.restore();\r\n        }\r\n\r\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\r\n            var left, right, bottom, top,\r\n                drawLeft, drawRight, drawTop, drawBottom,\r\n                tmp;\r\n\r\n            // in horizontal mode, we start the bar from the left\r\n            // instead of from the bottom so it appears to be\r\n            // horizontal rather than vertical\r\n            if (horizontal) {\r\n                drawBottom = drawRight = drawTop = true;\r\n                drawLeft = false;\r\n                left = b;\r\n                right = x;\r\n                top = y + barLeft;\r\n                bottom = y + barRight;\r\n\r\n                // account for negative bars\r\n                if (right < left) {\r\n                    tmp = right;\r\n                    right = left;\r\n                    left = tmp;\r\n                    drawLeft = true;\r\n                    drawRight = false;\r\n                }\r\n            }\r\n            else {\r\n                drawLeft = drawRight = drawTop = true;\r\n                drawBottom = false;\r\n                left = x + barLeft;\r\n                right = x + barRight;\r\n                bottom = b;\r\n                top = y;\r\n\r\n                // account for negative bars\r\n                if (top < bottom) {\r\n                    tmp = top;\r\n                    top = bottom;\r\n                    bottom = tmp;\r\n                    drawBottom = true;\r\n                    drawTop = false;\r\n                }\r\n            }\r\n\r\n            // clip\r\n            if (right < axisx.min || left > axisx.max ||\r\n                top < axisy.min || bottom > axisy.max)\r\n                return;\r\n\r\n            if (left < axisx.min) {\r\n                left = axisx.min;\r\n                drawLeft = false;\r\n            }\r\n\r\n            if (right > axisx.max) {\r\n                right = axisx.max;\r\n                drawRight = false;\r\n            }\r\n\r\n            if (bottom < axisy.min) {\r\n                bottom = axisy.min;\r\n                drawBottom = false;\r\n            }\r\n\r\n            if (top > axisy.max) {\r\n                top = axisy.max;\r\n                drawTop = false;\r\n            }\r\n\r\n            left = axisx.p2c(left);\r\n            bottom = axisy.p2c(bottom);\r\n            right = axisx.p2c(right);\r\n            top = axisy.p2c(top);\r\n\r\n            // fill the bar\r\n            if (fillStyleCallback) {\r\n                c.fillStyle = fillStyleCallback(bottom, top);\r\n                c.fillRect(left, top, right - left, bottom - top)\r\n            }\r\n\r\n            // draw outline\r\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\r\n                c.beginPath();\r\n\r\n                // FIXME: inline moveTo is buggy with excanvas\r\n                c.moveTo(left, bottom);\r\n                if (drawLeft)\r\n                    c.lineTo(left, top);\r\n                else\r\n                    c.moveTo(left, top);\r\n                if (drawTop)\r\n                    c.lineTo(right, top);\r\n                else\r\n                    c.moveTo(right, top);\r\n                if (drawRight)\r\n                    c.lineTo(right, bottom);\r\n                else\r\n                    c.moveTo(right, bottom);\r\n                if (drawBottom)\r\n                    c.lineTo(left, bottom);\r\n                else\r\n                    c.moveTo(left, bottom);\r\n                c.stroke();\r\n            }\r\n        }\r\n\r\n        function drawSeriesBars(series) {\r\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\r\n                var points = datapoints.points, ps = datapoints.pointsize;\r\n\r\n                for (var i = 0; i < points.length; i += ps) {\r\n                    if (points[i] == null)\r\n                        continue;\r\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\r\n                }\r\n            }\r\n\r\n            ctx.save();\r\n            ctx.translate(plotOffset.left, plotOffset.top);\r\n\r\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\r\n            ctx.lineWidth = series.bars.lineWidth;\r\n            ctx.strokeStyle = series.color;\r\n\r\n            var barLeft;\r\n\r\n            switch (series.bars.align) {\r\n                case \"left\":\r\n                    barLeft = 0;\r\n                    break;\r\n                case \"right\":\r\n                    barLeft = -series.bars.barWidth;\r\n                    break;\r\n                default:\r\n                    barLeft = -series.bars.barWidth / 2;\r\n            }\r\n\r\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\r\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\r\n            ctx.restore();\r\n        }\r\n\r\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\r\n            var fill = filloptions.fill;\r\n            if (!fill)\r\n                return null;\r\n\r\n            if (filloptions.fillColor)\r\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\r\n\r\n            var c = $.color.parse(seriesColor);\r\n            c.a = typeof fill == \"number\" ? fill : 0.4;\r\n            c.normalize();\r\n            return c.toString();\r\n        }\r\n\r\n        function insertLegend() {\r\n\r\n            if (options.legend.container != null) {\r\n                $(options.legend.container).html(\"\");\r\n            } else {\r\n                placeholder.find(\".legend\").remove();\r\n            }\r\n\r\n            if (!options.legend.show) {\r\n                return;\r\n            }\r\n\r\n            var fragments = [], entries = [], rowStarted = false,\r\n                lf = options.legend.labelFormatter, s, label;\r\n\r\n            // Build a list of legend entries, with each having a label and a color\r\n\r\n            for (var i = 0; i < series.length; ++i) {\r\n                s = series[i];\r\n                if (s.label) {\r\n                    label = lf ? lf(s.label, s) : s.label;\r\n                    if (label) {\r\n                        entries.push({\r\n                            label: label,\r\n                            color: s.color\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Sort the legend using either the default or a custom comparator\r\n\r\n            if (options.legend.sorted) {\r\n                if ($.isFunction(options.legend.sorted)) {\r\n                    entries.sort(options.legend.sorted);\r\n                } else if (options.legend.sorted == \"reverse\") {\r\n                \tentries.reverse();\r\n                } else {\r\n                    var ascending = options.legend.sorted != \"descending\";\r\n                    entries.sort(function(a, b) {\r\n                        return a.label == b.label ? 0 : (\r\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\r\n                        );\r\n                    });\r\n                }\r\n            }\r\n\r\n            // Generate markup for the list of entries, in their final order\r\n\r\n            for (var i = 0; i < entries.length; ++i) {\r\n\r\n                var entry = entries[i];\r\n\r\n                if (i % options.legend.noColumns == 0) {\r\n                    if (rowStarted)\r\n                        fragments.push('</tr>');\r\n                    fragments.push('<tr>');\r\n                    rowStarted = true;\r\n                }\r\n\r\n                fragments.push(\r\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\r\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\r\n                );\r\n            }\r\n\r\n            if (rowStarted)\r\n                fragments.push('</tr>');\r\n\r\n            if (fragments.length == 0)\r\n                return;\r\n\r\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\r\n            if (options.legend.container != null)\r\n                $(options.legend.container).html(table);\r\n            else {\r\n                var pos = \"\",\r\n                    p = options.legend.position,\r\n                    m = options.legend.margin;\r\n                if (m[0] == null)\r\n                    m = [m, m];\r\n                if (p.charAt(0) == \"n\")\r\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\r\n                else if (p.charAt(0) == \"s\")\r\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\r\n                if (p.charAt(1) == \"e\")\r\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\r\n                else if (p.charAt(1) == \"w\")\r\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\r\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\r\n                if (options.legend.backgroundOpacity != 0.0) {\r\n                    // put in the transparent background\r\n                    // separately to avoid blended labels and\r\n                    // label boxes\r\n                    var c = options.legend.backgroundColor;\r\n                    if (c == null) {\r\n                        c = options.grid.backgroundColor;\r\n                        if (c && typeof c == \"string\")\r\n                            c = $.color.parse(c);\r\n                        else\r\n                            c = $.color.extract(legend, 'background-color');\r\n                        c.a = 1;\r\n                        c = c.toString();\r\n                    }\r\n                    var div = legend.children();\r\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // interactive features\r\n\r\n        var highlights = [],\r\n            redrawTimeout = null;\r\n\r\n        // returns the data item the mouse is over, or null if none is found\r\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\r\n            var maxDistance = options.grid.mouseActiveRadius,\r\n                smallestDistance = maxDistance * maxDistance + 1,\r\n                item = null, foundPoint = false, i, j, ps;\r\n\r\n            for (i = series.length - 1; i >= 0; --i) {\r\n                if (!seriesFilter(series[i]))\r\n                    continue;\r\n\r\n                var s = series[i],\r\n                    axisx = s.xaxis,\r\n                    axisy = s.yaxis,\r\n                    points = s.datapoints.points,\r\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\r\n                    my = axisy.c2p(mouseY),\r\n                    maxx = maxDistance / axisx.scale,\r\n                    maxy = maxDistance / axisy.scale;\r\n\r\n                ps = s.datapoints.pointsize;\r\n                // with inverse transforms, we can't use the maxx/maxy\r\n                // optimization, sadly\r\n                if (axisx.options.inverseTransform)\r\n                    maxx = Number.MAX_VALUE;\r\n                if (axisy.options.inverseTransform)\r\n                    maxy = Number.MAX_VALUE;\r\n\r\n                if (s.lines.show || s.points.show) {\r\n                    for (j = 0; j < points.length; j += ps) {\r\n                        var x = points[j], y = points[j + 1];\r\n                        if (x == null)\r\n                            continue;\r\n\r\n                        // For points and lines, the cursor must be within a\r\n                        // certain distance to the data point\r\n                        if (x - mx > maxx || x - mx < -maxx ||\r\n                            y - my > maxy || y - my < -maxy)\r\n                            continue;\r\n\r\n                        // We have to calculate distances in pixels, not in\r\n                        // data units, because the scales of the axes may be different\r\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\r\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\r\n                            dist = dx * dx + dy * dy; // we save the sqrt\r\n\r\n                        // use <= to ensure last point takes precedence\r\n                        // (last generally means on top of)\r\n                        if (dist < smallestDistance) {\r\n                            smallestDistance = dist;\r\n                            item = [i, j / ps];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (s.bars.show && !item) { // no other point can be nearby\r\n\r\n                    var barLeft, barRight;\r\n\r\n                    switch (s.bars.align) {\r\n                        case \"left\":\r\n                            barLeft = 0;\r\n                            break;\r\n                        case \"right\":\r\n                            barLeft = -s.bars.barWidth;\r\n                            break;\r\n                        default:\r\n                            barLeft = -s.bars.barWidth / 2;\r\n                    }\r\n\r\n                    barRight = barLeft + s.bars.barWidth;\r\n\r\n                    for (j = 0; j < points.length; j += ps) {\r\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\r\n                        if (x == null)\r\n                            continue;\r\n\r\n                        // for a bar graph, the cursor must be inside the bar\r\n                        if (series[i].bars.horizontal ?\r\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\r\n                             my >= y + barLeft && my <= y + barRight) :\r\n                            (mx >= x + barLeft && mx <= x + barRight &&\r\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\r\n                                item = [i, j / ps];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (item) {\r\n                i = item[0];\r\n                j = item[1];\r\n                ps = series[i].datapoints.pointsize;\r\n\r\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\r\n                         dataIndex: j,\r\n                         series: series[i],\r\n                         seriesIndex: i };\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        function onMouseMove(e) {\r\n            if (options.grid.hoverable)\r\n                triggerClickHoverEvent(\"plothover\", e,\r\n                                       function (s) { return s[\"hoverable\"] != false; });\r\n        }\r\n\r\n        function onMouseLeave(e) {\r\n            if (options.grid.hoverable)\r\n                triggerClickHoverEvent(\"plothover\", e,\r\n                                       function (s) { return false; });\r\n        }\r\n\r\n        function onClick(e) {\r\n            triggerClickHoverEvent(\"plotclick\", e,\r\n                                   function (s) { return s[\"clickable\"] != false; });\r\n        }\r\n\r\n        // trigger click or hover event (they send the same parameters\r\n        // so we share their code)\r\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\r\n            var offset = eventHolder.offset(),\r\n                canvasX = event.pageX - offset.left - plotOffset.left,\r\n                canvasY = event.pageY - offset.top - plotOffset.top,\r\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\r\n\r\n            pos.pageX = event.pageX;\r\n            pos.pageY = event.pageY;\r\n\r\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\r\n\r\n            if (item) {\r\n                // fill in mouse pos for any listeners out there\r\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\r\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\r\n            }\r\n\r\n            if (options.grid.autoHighlight) {\r\n                // clear auto-highlights\r\n                for (var i = 0; i < highlights.length; ++i) {\r\n                    var h = highlights[i];\r\n                    if (h.auto == eventname &&\r\n                        !(item && h.series == item.series &&\r\n                          h.point[0] == item.datapoint[0] &&\r\n                          h.point[1] == item.datapoint[1]))\r\n                        unhighlight(h.series, h.point);\r\n                }\r\n\r\n                if (item)\r\n                    highlight(item.series, item.datapoint, eventname);\r\n            }\r\n\r\n            placeholder.trigger(eventname, [ pos, item ]);\r\n        }\r\n\r\n        function triggerRedrawOverlay() {\r\n            var t = options.interaction.redrawOverlayInterval;\r\n            if (t == -1) {      // skip event queue\r\n                drawOverlay();\r\n                return;\r\n            }\r\n\r\n            if (!redrawTimeout)\r\n                redrawTimeout = setTimeout(drawOverlay, t);\r\n        }\r\n\r\n        function drawOverlay() {\r\n            redrawTimeout = null;\r\n\r\n            // draw highlights\r\n            octx.save();\r\n            overlay.clear();\r\n            octx.translate(plotOffset.left, plotOffset.top);\r\n\r\n            var i, hi;\r\n            for (i = 0; i < highlights.length; ++i) {\r\n                hi = highlights[i];\r\n\r\n                if (hi.series.bars.show)\r\n                    drawBarHighlight(hi.series, hi.point);\r\n                else\r\n                    drawPointHighlight(hi.series, hi.point);\r\n            }\r\n            octx.restore();\r\n\r\n            executeHooks(hooks.drawOverlay, [octx]);\r\n        }\r\n\r\n        function highlight(s, point, auto) {\r\n            if (typeof s == \"number\")\r\n                s = series[s];\r\n\r\n            if (typeof point == \"number\") {\r\n                var ps = s.datapoints.pointsize;\r\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\r\n            }\r\n\r\n            var i = indexOfHighlight(s, point);\r\n            if (i == -1) {\r\n                highlights.push({ series: s, point: point, auto: auto });\r\n\r\n                triggerRedrawOverlay();\r\n            }\r\n            else if (!auto)\r\n                highlights[i].auto = false;\r\n        }\r\n\r\n        function unhighlight(s, point) {\r\n            if (s == null && point == null) {\r\n                highlights = [];\r\n                triggerRedrawOverlay();\r\n                return;\r\n            }\r\n\r\n            if (typeof s == \"number\")\r\n                s = series[s];\r\n\r\n            if (typeof point == \"number\") {\r\n                var ps = s.datapoints.pointsize;\r\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\r\n            }\r\n\r\n            var i = indexOfHighlight(s, point);\r\n            if (i != -1) {\r\n                highlights.splice(i, 1);\r\n\r\n                triggerRedrawOverlay();\r\n            }\r\n        }\r\n\r\n        function indexOfHighlight(s, p) {\r\n            for (var i = 0; i < highlights.length; ++i) {\r\n                var h = highlights[i];\r\n                if (h.series == s && h.point[0] == p[0]\r\n                    && h.point[1] == p[1])\r\n                    return i;\r\n            }\r\n            return -1;\r\n        }\r\n\r\n        function drawPointHighlight(series, point) {\r\n            var x = point[0], y = point[1],\r\n                axisx = series.xaxis, axisy = series.yaxis,\r\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\r\n\r\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\r\n                return;\r\n\r\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\r\n            octx.lineWidth = pointRadius;\r\n            octx.strokeStyle = highlightColor;\r\n            var radius = 1.5 * pointRadius;\r\n            x = axisx.p2c(x);\r\n            y = axisy.p2c(y);\r\n\r\n            octx.beginPath();\r\n            if (series.points.symbol == \"circle\")\r\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n            else\r\n                series.points.symbol(octx, x, y, radius, false);\r\n            octx.closePath();\r\n            octx.stroke();\r\n        }\r\n\r\n        function drawBarHighlight(series, point) {\r\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\r\n                fillStyle = highlightColor,\r\n                barLeft;\r\n\r\n            switch (series.bars.align) {\r\n                case \"left\":\r\n                    barLeft = 0;\r\n                    break;\r\n                case \"right\":\r\n                    barLeft = -series.bars.barWidth;\r\n                    break;\r\n                default:\r\n                    barLeft = -series.bars.barWidth / 2;\r\n            }\r\n\r\n            octx.lineWidth = series.bars.lineWidth;\r\n            octx.strokeStyle = highlightColor;\r\n\r\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\r\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\r\n        }\r\n\r\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\r\n            if (typeof spec == \"string\")\r\n                return spec;\r\n            else {\r\n                // assume this is a gradient spec; IE currently only\r\n                // supports a simple vertical gradient properly, so that's\r\n                // what we support too\r\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\r\n\r\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\r\n                    var c = spec.colors[i];\r\n                    if (typeof c != \"string\") {\r\n                        var co = $.color.parse(defaultColor);\r\n                        if (c.brightness != null)\r\n                            co = co.scale('rgb', c.brightness);\r\n                        if (c.opacity != null)\r\n                            co.a *= c.opacity;\r\n                        c = co.toString();\r\n                    }\r\n                    gradient.addColorStop(i / (l - 1), c);\r\n                }\r\n\r\n                return gradient;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Add the plot function to the top level of the jQuery object\r\n\r\n    $.plot = function(placeholder, data, options) {\r\n        //var t0 = new Date();\r\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\r\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\r\n        return plot;\r\n    };\r\n\r\n    $.plot.version = \"0.8.3\";\r\n\r\n    $.plot.plugins = [];\r\n\r\n    // Also add the plot function as a chainable property\r\n\r\n    $.fn.plot = function(data, options) {\r\n        return this.each(function() {\r\n            $.plot(this, data, options);\r\n        });\r\n    };\r\n\r\n    // round to nearby lower multiple of base\r\n    function floorInBase(n, base) {\r\n        return base * Math.floor(n / base);\r\n    }\r\n\r\n})(jQuery);\r\n"]}