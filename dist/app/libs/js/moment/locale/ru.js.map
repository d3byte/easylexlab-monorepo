{"version":3,"sources":["../../../../../../server/app/libs/js/moment/locale/ru.js"],"names":["factory","define","amd","exports","module","require","global","moment","plural","word","num","forms","split","relativeTimeWithPlural","number","withoutSuffix","key","format","monthsCaseReplace","m","months","nounCase","test","month","monthsShortCaseReplace","monthsShort","weekdaysCaseReplace","weekdays","day","defineLocale","weekdaysShort","weekdaysMin","monthsParse","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","lastDay","nextWeek","lastWeek","now","week","sameElse","relativeTime","future","past","s","mm","h","hh","d","dd","M","MM","y","yy","meridiemParse","isPM","input","meridiem","hour","minute","isLower","ordinalParse","ordinal","period","dow","doy"],"mappings":"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","file":"ru.js","sourcesContent":["// moment.js locale configuration\r\n// locale : russian (ru)\r\n// author : Viktorminator : https://github.com/Viktorminator\r\n// Author : Menelion Elensúle : https://github.com/Oire\r\n\r\n(function (factory) {\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(['moment'], factory); // AMD\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('../moment')); // Node\r\n    } else {\r\n        factory((typeof global !== 'undefined' ? global : this).moment); // node or other global\r\n    }\r\n}(function (moment) {\r\n    function plural(word, num) {\r\n        var forms = word.split('_');\r\n        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\r\n    }\r\n\r\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\r\n        var format = {\r\n            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\r\n            'hh': 'час_часа_часов',\r\n            'dd': 'день_дня_дней',\r\n            'MM': 'месяц_месяца_месяцев',\r\n            'yy': 'год_года_лет'\r\n        };\r\n        if (key === 'm') {\r\n            return withoutSuffix ? 'минута' : 'минуту';\r\n        }\r\n        else {\r\n            return number + ' ' + plural(format[key], +number);\r\n        }\r\n    }\r\n\r\n    function monthsCaseReplace(m, format) {\r\n        var months = {\r\n            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\r\n            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')\r\n        },\r\n\r\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\r\n            'accusative' :\r\n            'nominative';\r\n\r\n        return months[nounCase][m.month()];\r\n    }\r\n\r\n    function monthsShortCaseReplace(m, format) {\r\n        var monthsShort = {\r\n            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\r\n            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')\r\n        },\r\n\r\n        nounCase = (/D[oD]?(\\[[^\\[\\]]*\\]|\\s+)+MMMM?/).test(format) ?\r\n            'accusative' :\r\n            'nominative';\r\n\r\n        return monthsShort[nounCase][m.month()];\r\n    }\r\n\r\n    function weekdaysCaseReplace(m, format) {\r\n        var weekdays = {\r\n            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\r\n            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')\r\n        },\r\n\r\n        nounCase = (/\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/).test(format) ?\r\n            'accusative' :\r\n            'nominative';\r\n\r\n        return weekdays[nounCase][m.day()];\r\n    }\r\n\r\n    return moment.defineLocale('ru', {\r\n        months : monthsCaseReplace,\r\n        monthsShort : monthsShortCaseReplace,\r\n        weekdays : weekdaysCaseReplace,\r\n        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\r\n        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\r\n        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],\r\n        longDateFormat : {\r\n            LT : 'HH:mm',\r\n            LTS : 'LT:ss',\r\n            L : 'DD.MM.YYYY',\r\n            LL : 'D MMMM YYYY г.',\r\n            LLL : 'D MMMM YYYY г., LT',\r\n            LLLL : 'dddd, D MMMM YYYY г., LT'\r\n        },\r\n        calendar : {\r\n            sameDay: '[Сегодня в] LT',\r\n            nextDay: '[Завтра в] LT',\r\n            lastDay: '[Вчера в] LT',\r\n            nextWeek: function () {\r\n                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';\r\n            },\r\n            lastWeek: function (now) {\r\n                if (now.week() !== this.week()) {\r\n                    switch (this.day()) {\r\n                    case 0:\r\n                        return '[В прошлое] dddd [в] LT';\r\n                    case 1:\r\n                    case 2:\r\n                    case 4:\r\n                        return '[В прошлый] dddd [в] LT';\r\n                    case 3:\r\n                    case 5:\r\n                    case 6:\r\n                        return '[В прошлую] dddd [в] LT';\r\n                    }\r\n                } else {\r\n                    if (this.day() === 2) {\r\n                        return '[Во] dddd [в] LT';\r\n                    } else {\r\n                        return '[В] dddd [в] LT';\r\n                    }\r\n                }\r\n            },\r\n            sameElse: 'L'\r\n        },\r\n        relativeTime : {\r\n            future : 'через %s',\r\n            past : '%s назад',\r\n            s : 'несколько секунд',\r\n            m : relativeTimeWithPlural,\r\n            mm : relativeTimeWithPlural,\r\n            h : 'час',\r\n            hh : relativeTimeWithPlural,\r\n            d : 'день',\r\n            dd : relativeTimeWithPlural,\r\n            M : 'месяц',\r\n            MM : relativeTimeWithPlural,\r\n            y : 'год',\r\n            yy : relativeTimeWithPlural\r\n        },\r\n\r\n        meridiemParse: /ночи|утра|дня|вечера/i,\r\n        isPM : function (input) {\r\n            return /^(дня|вечера)$/.test(input);\r\n        },\r\n\r\n        meridiem : function (hour, minute, isLower) {\r\n            if (hour < 4) {\r\n                return 'ночи';\r\n            } else if (hour < 12) {\r\n                return 'утра';\r\n            } else if (hour < 17) {\r\n                return 'дня';\r\n            } else {\r\n                return 'вечера';\r\n            }\r\n        },\r\n\r\n        ordinalParse: /\\d{1,2}-(й|го|я)/,\r\n        ordinal: function (number, period) {\r\n            switch (period) {\r\n            case 'M':\r\n            case 'd':\r\n            case 'DDD':\r\n                return number + '-й';\r\n            case 'D':\r\n                return number + '-го';\r\n            case 'w':\r\n            case 'W':\r\n                return number + '-я';\r\n            default:\r\n                return number;\r\n            }\r\n        },\r\n\r\n        week : {\r\n            dow : 1, // Monday is the first day of the week.\r\n            doy : 7  // The week that contains Jan 1st is the first week of the year.\r\n        }\r\n    });\r\n}));\r\n"]}