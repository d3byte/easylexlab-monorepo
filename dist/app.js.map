{"version":3,"sources":["../server/app.js"],"names":["connect","useMongoClient","console","log","app","use"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;AAEA,mBAASA,OAAT,CAAiB,oCAAjB,EAAuD;AACnDC,oBAAgB;AADmC,CAAvD,EAEG,YAAM;AACLC,YAAQC,GAAR,CAAY,sBAAZ;AACH,CAJD;;AAMA,IAAMC,MAAM,wBAAZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQ,MAAR;AACA;;kBAEeD,G","file":"app.js","sourcesContent":["import express from 'express';\nimport mongoose from 'mongoose';\nimport bodyParser from 'body-parser';\nimport expressJWT from 'express-jwt';\nimport jwt from 'jsonwebtoken';\nimport path from 'path';\nimport cors from 'cors';\nimport qt from 'quickthumb';\n\nimport secret from './secret';\n\nimport routes from './routes';\n\nmongoose.connect('mongodb://localhost:27017/eng_proj', {\n    useMongoClient: true\n}, () => {\n    console.log('Connected to mongodb');\n});\n\nconst app = express();\n\n// Public folder\n// const folder = __dirname + \"/app/\";\n\n// app.get('/', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/signup', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/signup/student', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/signup/teacher', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/profile', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/profile/msg', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/group/:id', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/group/:id/newtask', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/settings', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/profile/newgroup', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/stats', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/login', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/forgotpassword', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/recover/:token', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/info/rules', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n// app.get('/task/:id', (req, res) => {\n//     res.sendFile(path.join(folder + \"index.html\"));\n// });\n\n// app.use(qt.static(__dirname + '/'));\n// app.use('/', express.static(folder));\n// app.use('/signup', express.static(folder));\n// app.use('/signup/student', express.static(folder));\n// app.use('/signup/teacher', express.static(folder));\n// app.use('/profile', express.static(folder));\n// app.use('/group', express.static(folder));\n// app.use('/group/:id', express.static(folder));\n// app.use('/task', express.static(folder));\n// app.use('/task/:id', express.static(folder));\n// app.use('/recover', express.static(folder));\n// app.use('/recover/:token', express.static(folder));\n// app.use('/info', express.static(folder));\n// app.use('/info/rules', express.static(folder));\n\n// Middleware\n// var whitelist = ['http://cf82612.tmweb.ru', 'http://easylexlab.ru'];\n// var corsOptions = {\n//     origin: function (origin, callback) {\n//         if (whitelist.indexOf(origin) !== -1) {\n//             callback(null, true)\n//         } else {\n//             callback(new Error('Not allowed by CORS'))\n//         }\n//     }\n// }\n// app.use(cors(corsOptions));\napp.use(cors());\napp.use('/api', routes);\n// app.use(expressJWT({ secret: secret }).unless({ path: ['api/login', '/'] }));\n\nexport default app;\n"]}