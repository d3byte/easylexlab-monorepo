{"version":3,"sources":["../../server/controllers/groupController.js"],"names":["groupController","post","req","res","body","name","grade","user","permissions","code","Group","findOne","err","group","index","randomInteger","newCode","i","length","_teacher","id","save","then","newGroup","status","json","success","data","catch","message","delete","groupId","findByIdAndRemove","addStudent","groupCode","studentId","findOneAndUpdate","$push","existingGroup","getGroups","userId","find","populate","path","select","match","groups","getGroup","findById","addTest","stackId","Stack","_tests","push","stack","_id","error","regCode","newMsg","msgText","author","text","notification","type","seen","console","log","findByIdAndUpdate","messages","User","update","_groups","$in","notifications"],"mappings":"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","file":"groupController.js","sourcesContent":["import randomize from 'randomatic';\n\nimport db from './../models';\nimport secret from './../secret';\nimport helper from './helperFunctions';\n\nconst groupController = {};\n\n// New group\ngroupController.post = (req, res) => {\n  const {\n    name,\n    grade\n  } = req.body;\n\n  const user = req.user;\n\n  if(user.permissions == \"admin\" || user.permissions == \"teacher\") {\n    const code = randomize('A0', 5);\n    db.Group.findOne({ code }, (err, group) => {\n      if(err)\n        throw err\n      if(group) {\n        let index = helper.randomInteger(1, 5);\n        var newCode = '';\n        for(let i = 0; i < code.length; i++) {\n          if(i != index) {\n            newCode += code[i];\n          } else {\n            newCode += randomize('A0', 1);\n          }\n        }\n        const group = new db.Group({\n          name,\n          code: newCode,\n          grade,\n          _teacher: user.id\n        });\n        group.save().then((newGroup) => {\n          return res.status(200).json({\n            success: true,\n            data: newGroup\n          });\n        }).catch((err) => {\n          return res.status(500).json({\n            message: err\n          });\n        });\n      } else {\n        const group = new db.Group({\n          name,\n          code,\n          grade,\n          _teacher: user.id\n        });\n\n        group.save().then((newGroup) => {\n          return res.status(200).json({\n            success: true,\n            data: newGroup\n          });\n        }).catch((err) => {\n          return res.status(500).json({\n            message: err\n          });\n        });\n      }\n    });\n  } else {\n    return res.status(501).json({\n      message: 'Access denied'\n    });\n  }\n\n};\n\n// Remove group\ngroupController.delete = (req, res) => {\n  const groupId = req.body.groupId;\n  const user = req.user;\n\n  if(user.permissions == \"admin\" || user.permissions == \"teacher\") {\n    db.Group.findByIdAndRemove(groupId).then(() => {\n      return res.status(200).json({\n        success: true\n      });\n    }).catch((err) => {\n      return res.status(500).json({\n        message: err\n      });\n    });\n  } else {\n    return res.status(501).json({\n      message: 'Access denied'\n    });\n  }\n\n};\n\n// Add student\ngroupController.addStudent = (req, res) => {\n  const {\n    groupCode,\n    studentId\n  } = req.body;\n\n  db.Group.findOneAndUpdate(\n    { code: groupCode },\n    { $push: { '_students': studentId }},\n  ).then((existingGroup) => {\n    return res.status(200).json({\n      success: true\n    });\n  }).catch((err) => {\n    return res.status(500).json({\n      message: err\n    });\n  });\n\n};\n\n// Get groups of teacher\ngroupController.getGroups = (req, res) => {\n  const userId = req.user.id;\n\n  db.Group.find({_teacher: userId}).populate({\n    path: '_teacher',\n    select: 'name username createdAt -_id',\n    match: {'isDeleted': false}\n  }).populate({\n    path: '_tests',\n    select: 'name tasks timeToDo _group attempts results'\n  }).populate({\n    path: '_students',\n    select: 'name username',\n    match: {'isDeleted': false}\n  }).then((groups) => {\n    return res.status(200).json({\n      success: true,\n      data: groups\n    });\n  }).catch((err) => {\n    res.status(500).json({\n      message: err\n    })\n  });\n\n};\n\n// Watch one exact group\ngroupController.getGroup = (req, res) => {\n  const groupId = req.body.groupId;\n  db.Group.findById(groupId).populate({\n    path: '_students',\n    select: '',\n    match: { 'isDeleted': false }\n  }).populate({\n    path: '_tests',\n    select: 'name tasks timeToDo _group attempts results'\n  }).then(group => {\n    return res.status(200).json({\n      success: true,\n      group\n    });\n  }).catch((err) => {\n    res.status(500).json({\n      message: err\n    });\n  });\n\n};\n\n// Stick test to group\ngroupController.addTest = (req, res) => {\n  const {\n    groupId,\n    stackId\n  } = req.body;\n\n  const user = req.user;\n\n  if(user.permissions == 'teacher' || user.permissions == 'admin') {\n    db.Stack.findById(stackId).then(stack => {\n      db.Group.findById(groupId).then(group => {\n        group._tests.push(stack._id);\n        group.save().then(suc => {\n          res.status(200).json({ success: true });\n        }).catch(error => {\n          throw error;\n        });\n      }).catch(err => {\n        throw err;\n      });\n    }).catch(err => {\n      throw err;\n    });\n  } else res.status(501).json({'error':'No permissions for this action'});\n\n};\n\n// Registration link\ngroupController.regCode = (req, res) => {\n  const groupId = req.body.groupId;\n  const user = req.user;\n\n  if(user.permissions == 'teacher' || user.permissions == 'admin') {\n    db.Group.findById(groupId).then(group => {\n      return res.json({\n        success: true,\n        groupCode: group.code\n      });\n    });\n  }\n};\n\ngroupController.newMsg = (req, res) => {\n  const user = req.user;\n  const {\n    groupId,\n    msgText\n  } = req.body;\n\n  const message = {\n    author: user.name,\n    text: msgText\n  };\n\n  const notification = {\n    type: 'newMsg',\n    text: `Новое сообщение.`,\n    seen: false\n  };\n\n  console.log(groupId);\n\n  if(user.permissions == 'teacher' || user.permissions == 'admin') {\n    db.Group.findByIdAndUpdate(groupId, {\n      $push: { messages: message }\n    }).then(group => {\n      console.log(group);\n      db.User.update({ _groups: { $in: [groupId] } },\n      { $push: { notifications: notification } }).then(success => {\n        console.log(success);\n        res.json({ success: true });\n      }).catch(error => { throw error });\n    }).catch(err => { throw err });\n  }\n};\n\nexport default groupController;\n"]}