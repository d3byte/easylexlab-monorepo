{"version":3,"sources":["../../server/controllers/userController.js"],"names":["userController","post","req","res","body","firstName","lastName","username","email","password","permissions","groupCode","school","city","User","findOne","err","user","json","error","length","Group","code","then","_groups","group","_id","save","transporter","createTransport","service","secure","port","auth","pass","tls","rejectUnauthorized","newUser","HelperOptions","from","to","subject","text","sendMail","info","console","log","success","status","userId","catch","message","login","verifyPassword","valid","token","sign","id","type","getGroups","groupId","findById","changeEmail","findByIdAndUpdate","$set","updateInfo","myUser","query","changed","changePassword","newPassword","recoverToken","addGroup","includes","_students","map","student","push","$push","getNotifications","notifications","removeNotification","filter","notif","notificationsCopy","suc—Åess","getUser","populate","path","model","getUserMobile","select","learnWords","amount","stackId","userResult","pairsLength","Stack","result","stack","results","difference","Math","abs","newAmount","round","$inc","wordsLearnt","firstTime","recoverPassword","uri","encodeURI","checkToken","sendFeedback","name","leaveGroup","getAvatar","picName","filePath","exists","readFile","encoding","data","ext","extname","img"],"mappings":"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","file":"userController.js","sourcesContent":["import { verifyPassword, encryptPassword } from 'mongoose-bcrypt';\nimport jwt from 'jsonwebtoken';\nimport secret from './../secret';\nimport helper from './helperFunctions';\nimport nodemailer from 'nodemailer';\nimport fs from 'fs';\nimport path from 'path';\n\nimport db from './../models';\n\nconst userController = {};\n\nuserController.post = (req, res) => {\n    const {\n        firstName,\n        lastName,\n        username,\n        email,\n        password,\n        permissions,\n        groupCode,\n        school,\n        city\n    } = req.body;\n\n    db.User.findOne({username}, (err, user) => {\n        if (err)\n            throw err;\n        else if (user)\n            return res.json({error: '–î–∞–Ω–Ω—ã–π –ª–æ–≥–∏–Ω —É–∂–µ –∑–∞–Ω—è—Ç'});\n        else {\n            db.User.findOne({email}, (err, user) => {\n                if (err)\n                    throw err;\n                else if (user)\n                    res.json({error: '–î–∞–Ω–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞'});\n                else {\n                    if (!!groupCode.length) {\n                        db.Group.findOne({code: groupCode}).then(group => {\n                            const user = new db.User({\n                                firstName,\n                                lastName,\n                                username,\n                                email,\n                                password,\n                                permissions,\n                                _groups: [group._id],\n                                school,\n                                city\n                            });\n                            user.save().then(newUser => {\n                                let transporter = nodemailer.createTransport({\n                                  service: 'gmail',\n                                  secure: false,\n                                  port: 25,\n                                  auth: {\n                                    user: 'easylexlab@gmail.com',\n                                    pass: '45aCRawa@hut'\n                                  },\n                                  tls: {\n                                    rejectUnauthorized: false\n                                  }\n                                });\n                                if(newUser.permissions == 'student') {\n                                    let HelperOptions = {\n                                        from: '\"EasyLexLab\" <easylexlab@gmail.com>',\n                                        to: newUser.email,\n                                        // to: 'easylexlab@gmail.com',\n                                        subject: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ EasyLexLab',\n                                        text:\n                                            `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${newUser.firstName} ${newUser.lastName}!\\n\\n` +\n                                            '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ —Ç–æ, —á—Ç–æ –≤—ã —Å—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º EasyLexLab!\\n\\n' +\n                                            `–õ–æ–≥–∏–Ω: ${newUser.username}\\n` +\n                                            `–ü–∞—Ä–æ–ª—å: ${password}\\n\\n` +\n                                            'EasyLexLab ‚Äì —ç—Ç–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π –∏ —É—á–µ–Ω–∏–∫–æ–≤, –∏–∑—É—á–∞—é—â–∏—Ö —è–∑—ã–∫–∏.\\n\\n' +\n                                            'EasyLexLab –º–æ–∂–µ—Ç –í–∞–º –ø–æ–º–æ—á—å:\\n\\n' +\n                                            '‚Äì –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É—Å–≤–∞–∏–≤–∞—Ç—å —Å–ª–æ–≤–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ —É—Ä–æ–∫–∞—Ö.\\n' +\n                                            '‚Äì –í—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è, –∏—Å–ø–æ–ª—å–∑—É—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω, –∫–æ–º–ø—å—é—Ç–µ—Ä –∏–ª–∏ –ø–ª–∞–Ω—à–µ—Ç.\\n' +\n                                            '‚Äì –í –∏–≥—Ä–æ–≤–æ–π —Ñ–æ—Ä–º–µ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å —Å–ª–æ–≤–∞, —á—Ç–æ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Ä—É—Ç–∏–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏ –ø–æ–ª–µ–∑–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ.\\n' +\n                                            '‚Äì –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –Ω–∞–±–ª—é–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –≤—Å—ë –±–ª–∏–∂–µ –∫ —Ü–µ–ª–∏ ‚Äì \"—Å–≤–æ–±–æ–¥–Ω–æ –æ–±—â–∞—Ç—å—Å—è –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ\\n\\n' +\n                                            '–£–¥–∞—á–Ω–æ–≥–æ –≤–∞–º –æ–±—É—á–µ–Ω–∏—è!\\n\\n' +\n                                            '–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\\n' +\n                                            '–ö–æ–º–∞–Ω–¥–∞ EasyLexLab'\n                                    };\n                                    transporter.sendMail(HelperOptions, (error, info) => {\n                                        if (error) {\n                                            console.log(error);\n                                        } else {\n                                            return res.json({ success: true })\n                                        }\n                                    });\n                                } else if(newUser.permissions == 'teacher') {\n                                    let HelperOptions = {\n                                        from: '\"EasyLexLab\" <easylexlab@gmail.com>',\n                                        to: newUser.email,\n                                        // to: 'easylexlab@gmail.com',\n                                        subject: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ EasyLexLab',\n                                        text:\n                                            `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${newUser.firstName} ${newUser.lastName}!\\n\\n` +\n                                            '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ —Ç–æ, —á—Ç–æ –≤—ã —Å—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º EasyLexLab!\\n\\n' +\n                                            `–õ–æ–≥–∏–Ω: ${newUser.username}\\n` +\n                                            `–ü–∞—Ä–æ–ª—å: ${password}\\n\\n` +\n                                            'EasyLexLab ‚Äì —ç—Ç–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π –∏ —É—á–µ–Ω–∏–∫–æ–≤, –∏–∑—É—á–∞—é—â–∏—Ö —è–∑—ã–∫–∏.\\n\\n' +\n                                            'EasyLexLab –º–æ–∂–µ—Ç –í–∞–º –ø–æ–º–æ—á—å:\\n\\n' +\n                                            '- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –Ω–µ –≤—ã—Ö–æ–¥—è –∑–∞ —Ä–∞–º–∫–∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –§–ì–û–°.\\n' +\n                                            '- –ü—Ä–æ–≤–æ–¥–∏—Ç—å —É—Ä–æ–∫–∏ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–æ—Ü–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è –∏ —É—Å–≤–æ–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–ª–æ–≤ –≤—ã–Ω–µ—Å–µ–Ω –∑–∞ —Ä–∞–º–∫–∏ —É—Ä–æ–∫–∞ (–¥–µ—Ç–∏ –¥–µ–ª–∞—é—Ç –≤—Å–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –¥–æ–º–∞).\\n' +\n                                            '- –ë–æ–ª–µ–µ –≥–∏–±–∫–æ –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ –ø—Ä–æ—Ü–µ—Å—Å—É –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞, —É—á–∏—Ç—ã–≤–∞—è —É—Ä–æ–≤–µ–Ω—å –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã.\\n' +\n                                            '- –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ —Å–ª–æ–≤, –ø–æ–º–æ–≥–∞—è —É—á–µ–Ω–∏–∫–∞–º –±—ã—Å—Ç—Ä–µ–µ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —É—Å–ø–µ—Ö–æ–≤ –≤ –∏–∑—É—á–µ–Ω–∏–∏ —è–∑—ã–∫–æ–≤.\\n\\n' +\n                                            '–° –Ω–∞–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É—á–∏—Ç—å –∏ –ª–µ–≥–∫–æ —É—á–∏—Ç—å—Å—è!\\n\\n' +\n                                            '–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\\n' +\n                                            '–ö–æ–º–∞–Ω–¥–∞ EasyLexLab'\n                                    };\n                                    transporter.sendMail(HelperOptions, (error, info) => {\n                                        if (error) {\n                                            console.log(error);\n                                        } else {\n                                            return res.json({ success: true })\n                                        }\n                                    });\n                                }\n                                return res.status(200).json({\n                                    success: true,\n                                    userId: newUser._id\n                                });\n                            }).catch(err => {\n                                res.status(500).json({\n                                    message: err\n                                });\n                            });\n                        });\n                    } else {\n                        const user = new db.User({\n                            firstName,\n                            lastName,\n                            username,\n                            email,\n                            password,\n                            permissions,\n                            _groups: [],\n                            school,\n                            city\n                        });\n                        user.save().then(newUser => {\n                          let transporter = nodemailer.createTransport({\n                            service: 'gmail',\n                            secure: false,\n                            port: 25,\n                            auth: {\n                              user: 'easylexlab@gmail.com',\n                              pass: '45aCRawa@hut'\n                            },\n                            tls: {\n                              rejectUnauthorized: false\n                            }\n                          });\n                          if (newUser.permissions == 'student') {\n                              let HelperOptions = {\n                                  from: '\"EasyLexLab\" <easylexlab@gmail.com>',\n                                  to: newUser.email,\n                                  // to: 'easylexlab@gmail.com',\n                                  subject: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ EasyLexLab',\n                                  text:\n                                    `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${newUser.firstName} ${newUser.lastName}!\\n\\n` +\n                                    '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ —Ç–æ, —á—Ç–æ –≤—ã —Å—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º EasyLexLab!\\n\\n' +\n                                    `–õ–æ–≥–∏–Ω: ${newUser.username}\\n` +\n                                    `–ü–∞—Ä–æ–ª—å: ${password}\\n\\n` +\n                                    'EasyLexLab ‚Äì —ç—Ç–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π –∏ —É—á–µ–Ω–∏–∫–æ–≤, –∏–∑—É—á–∞—é—â–∏—Ö —è–∑—ã–∫–∏.\\n\\n' +\n                                    'EasyLexLab –º–æ–∂–µ—Ç –í–∞–º –ø–æ–º–æ—á—å:\\n\\n' +\n                                    '‚Äì –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É—Å–≤–∞–∏–≤–∞—Ç—å —Å–ª–æ–≤–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞ —É—Ä–æ–∫–∞—Ö.\\n' +\n                                    '‚Äì –í—ã–ø–æ–ª–Ω—è—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è, –∏—Å–ø–æ–ª—å–∑—É—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω, –∫–æ–º–ø—å—é—Ç–µ—Ä –∏–ª–∏ –ø–ª–∞–Ω—à–µ—Ç.\\n' +\n                                    '‚Äì –í –∏–≥—Ä–æ–≤–æ–π —Ñ–æ—Ä–º–µ –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å —Å–ª–æ–≤–∞, —á—Ç–æ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Ä—É—Ç–∏–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏ –ø–æ–ª–µ–∑–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ.\\n' +\n                                    '‚Äì –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –Ω–∞–±–ª—é–¥–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –≤—Å—ë –±–ª–∏–∂–µ –∫ —Ü–µ–ª–∏ ‚Äì \"—Å–≤–æ–±–æ–¥–Ω–æ –æ–±—â–∞—Ç—å—Å—è –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ\\n\\n' +\n                                    '–£–¥–∞—á–Ω–æ–≥–æ –≤–∞–º –æ–±—É—á–µ–Ω–∏—è!\\n\\n' +\n                                    '–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\\n' +\n                                    '–ö–æ–º–∞–Ω–¥–∞ EasyLexLab'\n                              };\n                              transporter.sendMail(HelperOptions, (error, info) => {\n                                  if (error) {\n                                      console.log(error);\n                                  } else {\n                                      return res.json({ success: true })\n                                  }\n                              });\n                          } else if (newUser.permissions == 'teacher') {\n                              let HelperOptions = {\n                                  from: '\"EasyLexLab\" <easylexlab@gmail.com>',\n                                  to: newUser.email,\n                                  // to: 'easylexlab@gmail.com',\n                                  subject: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ EasyLexLab',\n                                  text:\n                                    `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${newUser.firstName} ${newUser.lastName}!\\n\\n` +\n                                    '–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ —Ç–æ, —á—Ç–æ –≤—ã —Å—Ç–∞–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º EasyLexLab!\\n\\n' +\n                                    `–õ–æ–≥–∏–Ω: ${newUser.username}\\n` +\n                                    `–ü–∞—Ä–æ–ª—å: ${password}\\n\\n` +\n                                    'EasyLexLab ‚Äì —ç—Ç–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π –∏ —É—á–µ–Ω–∏–∫–æ–≤, –∏–∑—É—á–∞—é—â–∏—Ö —è–∑—ã–∫–∏.\\n\\n' +\n                                    'EasyLexLab –º–æ–∂–µ—Ç –í–∞–º –ø–æ–º–æ—á—å:\\n\\n' +\n                                    '- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –Ω–µ –≤—ã—Ö–æ–¥—è –∑–∞ —Ä–∞–º–∫–∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏ –§–ì–û–°.\\n' +\n                                    '- –ü—Ä–æ–≤–æ–¥–∏—Ç—å —É—Ä–æ–∫–∏ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–æ—Ü–µ—Å—Å –∏–∑—É—á–µ–Ω–∏—è –∏ —É—Å–≤–æ–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–ª–æ–≤ –≤—ã–Ω–µ—Å–µ–Ω –∑–∞ —Ä–∞–º–∫–∏ —É—Ä–æ–∫–∞ (–¥–µ—Ç–∏ –¥–µ–ª–∞—é—Ç –≤—Å–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –¥–æ–º–∞).\\n' +\n                                    '- –ë–æ–ª–µ–µ –≥–∏–±–∫–æ –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ –ø—Ä–æ—Ü–µ—Å—Å—É –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞, —É—á–∏—Ç—ã–≤–∞—è —É—Ä–æ–≤–µ–Ω—å –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã.\\n' +\n                                    '- –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∏–∑—É—á–µ–Ω–∏–µ —Å–ª–æ–≤, –ø–æ–º–æ–≥–∞—è —É—á–µ–Ω–∏–∫–∞–º –±—ã—Å—Ç—Ä–µ–µ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —É—Å–ø–µ—Ö–æ–≤ –≤ –∏–∑—É—á–µ–Ω–∏–∏ —è–∑—ã–∫–æ–≤.\\n\\n' +\n                                    '–° –Ω–∞–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É—á–∏—Ç—å –∏ –ª–µ–≥–∫–æ —É—á–∏—Ç—å—Å—è!\\n\\n' +\n                                    '–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\\n' +\n                                    '–ö–æ–º–∞–Ω–¥–∞ EasyLexLab'\n                              };\n                              transporter.sendMail(HelperOptions, (error, info) => {\n                                  if (error) {\n                                      console.log(error);\n                                  } else {\n                                      return res.json({ success: true })\n                                  }\n                              });\n                          }\n                          return res.status(200).json({\n                                success: true,\n                                userId: newUser._id\n                            });\n                        }).catch(err => {\n                            res.status(500).json({\n                                message: err\n                            });\n                        });\n                    }\n                }\n            });\n        }\n    });\n};\n\nuserController.login = (req, res) => {\n    const { username, password } = req.body;\n    db.User.findOne({username}).then(user => {\n        user.verifyPassword(password).then(valid => {\n            if (valid) {\n                const token = jwt.sign(\n                    {\n                        id: user._id,\n                        permissions: user.permissions\n                    },\n                    secret\n                );\n                res.status(200).json({\n                    success: valid,\n                    token\n                });\n            } else {\n                res.json({\n                    error: true,\n                    type: 'passwordNotValid'\n                });\n            }\n        }).catch(err => {\n            res.status(500).json({\n                message: err\n            });\n        });\n    }).catch((err) => {\n        res.json({\n            error: true,\n            type: 'loginNotFound'\n        });\n    });\n};\n\nuserController.getGroups = (req, res) => {\n    const user = req.user;\n    const groupId = req.body.groupId;\n    if (user.permissions == 'student' || user.permissions == 'teacher') {\n        db.Group.findById(groupId).then(group => {\n            res.json({\n                group\n            });\n        }).catch(err => {\n            res.status(500).json({\n                message: err\n            });\n        });\n    }\n};\n\nuserController.changeEmail = (req, res) => {\n    const user = req.user\n    const { email } = req.body\n    \n    db.findByIdAndUpdate(user.id, { $set: { email } }).then(done => {\n        res.json({ success: true })\n    })\n}\n\nuserController.updateInfo = (req, res) => {\n    const myUser = req.user;\n    const {\n      firstName,\n      lastName,\n      username\n    } = req.body;\n\n    const query = {};\n\n    if(firstName)\n      query.firstName = firstName;\n    if(lastName)\n      query.lastName = lastName;\n    if(username)\n      query.username = username;\n    else if (!firstName && !lastName) {\n        return res.json({\n            changed: false\n        });\n    }\n\n    if(query.username) {\n        db.User.findOne({ username: query.username }).then(user => {\n          if(user)\n            return res.json({error: '–î–∞–Ω–Ω—ã–π –ª–æ–≥–∏–Ω —É–∂–µ –∑–∞–Ω—è—Ç'});\n          else {\n            db.User.findByIdAndUpdate(myUser.id, {\n                $set: query\n            }).then(user => {\n                return res.json({\n                    success: true\n                });\n            }).catch(err => {\n                return res.status(500).json({\n                    message: err\n                });\n            });\n          }\n        })\n    } else {\n      db.User.findByIdAndUpdate(myUser.id, {\n          $set: query\n      }).then(user => {\n          return res.json({\n              success: true\n          });\n      }).catch(err => {\n          return res.status(500).json({\n              message: err\n          });\n      });\n    }\n};\n\nuserController.verifyPassword = (req, res) => {\n    const user = req.user;\n    const password = req.body.password;\n    db.User.findById(user.id).then(myUser => {\n        myUser.verifyPassword(password).then(valid => {\n            return res.json({ success: valid });\n        }).catch(err => {\n            res.status(500).json({\n                message: err\n            });\n        });\n    }).catch(err => {\n        res.status(500).json({\n            message: err\n        });\n    });\n};\n\nuserController.changePassword = (req, res) => {\n    const user = req.user;\n    const newPassword = req.body.newPassword;\n\n    db.User.findByIdAndUpdate(user.id, {$set: {password: newPassword, recoverToken: ''}})\n        .then(myUser => {\n            return res.json({success: true});\n        }).catch((err) => {\n          return res.status(500).json({\n            message: err\n        });\n    });\n};\n\nuserController.addGroup = (req, res) => {\n    const groupCode = req.body.groupCode;\n    const user = req.user;\n\n    db.Group.findOne({ code: groupCode }).then(group => {\n        let includes = false;\n        group._students.map(student => {\n            if(student == user.id) {\n                includes = true;\n            }\n        })\n        if(!includes) {\n            group._students.push(user.id);\n            group.save().then(r => {\n                db.User.findByIdAndUpdate(\n                    user.id,\n                    { $push: { '_groups': group._id } }).then(myUser => {\n                        res.json({ success: true });\n                    }).catch(err => {\n                        res.status(500).json({\n                            body: err\n                        });\n                    });\n            })\n        } else {\n            return res.json({ success: false })\n        }\n    })\n};\n\n\nuserController.getNotifications = (req, res) => {\n    const user = req.user;\n\n    db.User.findById(user.id).then(myUser => {\n        res.json({ notifications: myUser.notifications });\n    }).catch((err) => {\n        res.status(500).json({\n            message: err\n        });\n    });\n};\n\nuserController.removeNotification = (req, res) => {\n    const user = req.user;\n    const id = req.body.id;\n\n    db.User.findById(user.id).then(myUser => {\n        myUser.notifications = myUser.notifications.filter(notif => notif.id != id);\n        let notificationsCopy = myUser.notifications;\n        myUser.save();\n        res.json({ suc—Åess: true, notifications: notificationsCopy });\n    }).catch((err) => {\n        res.status(500).json({\n            message: err\n        });\n    });\n};\n\nuserController.getUser = (req, res) => {\n    const user = req.user;\n\n    db.User.findById(user.id)\n        .populate({\n            path: '_groups',\n            model: 'Group',\n            populate: {\n                path: '_tests',\n                model: 'Stack'\n            }\n        })\n        .then(user => {\n          return res.json({ user })\n        });\n};\n\nuserController.getUserMobile = (req, res) => {\n    const user = req.user;\n\n    db.User.findById(user.id)\n        .populate({\n            path: '',\n            select: '_id firstName lastName username email permissions createdAt picUrl wordsLearnt _groups'\n        })\n        .populate({\n            path: '_groups',\n            model: 'Group',\n            select: '_id name _tests',\n            populate: {\n                path: '_tests',\n                model: 'Stack',\n                select: '_id name tasks timeToDo _group attempts results deadline'\n            }\n        })\n        .then(user => {\n            return res.json({ user })\n        });\n};\n\nuserController.learnWords = (req, res) => {\n  const user = req.user;\n  const {\n    amount,\n    stackId,\n    userResult,\n    pairsLength\n  } = req.body;\n\n  db.Stack.findById(stackId).then(stack => {\n    let result = stack.results.filter(result => result.userId == user.id);\n    if(result[0]) {\n      let difference = Math.abs(result[0].result - userResult);\n      let newAmount = Math.round(pairsLength * (difference / 100));\n      db.User.findByIdAndUpdate(user.id, { $inc: { wordsLearnt: newAmount } }).then(success => {\n        return res.json({ wordsLearnt: newAmount });\n      })\n    } else {\n      db.User.findByIdAndUpdate(user.id, { $inc: { wordsLearnt: amount } }).then(success => {\n        return res.json({ wordsLearnt: amount, firstTime: true });\n      })\n    }\n  })\n};\n\nuserController.recoverPassword = (req, res) => {\n  const email = req.body.email;\n\n  db.User.findOne({ email }).then(user => {\n    if(!user) {\n      return res.json({ success: false })\n    }\n    const token = jwt.sign(\n      {\n        id: user._id,\n        email\n      },\n      secret\n    );\n    let uri = encodeURI(token);\n    user.recoverToken = token;\n    user.save().then(res => {\n      let transporter = nodemailer.createTransport({\n        service: 'gmail',\n        secure: false,\n        port: 25,\n        auth: {\n          user: 'easylexlab@gmail.com',\n          pass: '45aCRawa@hut'\n        },\n        tls: {\n          rejectUnauthorized: false\n        }\n      });\n      let HelperOptions = {\n        from: '\"EasyLexLab\" <easylexlab@gmail.com>',\n        to: user.email,\n        // to: 'easylexlab@gmail.com',\n        subject: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è',\n        text: \n        `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.firstName + ' ' + user.lastName}!\n        \n        –ß—Ç–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ:\n        easylexlab.ru/recover/${token}\n        \n        –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ URL-–∞–¥—Ä–µ—Å –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ –±—Ä–∞—É–∑–µ—Ä.\n\n        –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n        –° —É–≤–∞–∂–µ–Ω–∏–µ–º, \n        –ö–æ–º–∞–Ω–¥–∞ EasyLexLab`\n      };\n      transporter.sendMail(HelperOptions, (error, info) => {\n        if(error) {\n          console.log(error);\n        } else {\n          return res.json({ success: true })\n        }\n      });\n    });\n  })\n};\n\nuserController.checkToken = (req, res) => {\n  const token = req.body.token;\n  db.User.findOne({ recoverToken: token }).then(user => {\n    if(user) {\n      return res.json({ success: true });\n    }\n    return res.json({ success: false });\n  });\n};\n\nuserController.sendFeedback = (req, res) => {\n  const user = req.user;\n  const {\n    name,\n    text,\n    email\n  } = req.body;\n\n  let transporter = nodemailer.createTransport({\n    service: 'gmail',\n    secure: false,\n    port: 25,\n    auth: {\n      user: 'easylexlab@gmail.com',\n      pass: '45aCRawa@hut'\n    },\n    tls: {\n      rejectUnauthorized: false\n    }\n  });\n  let HelperOptions = {\n    from: `${name} <${email}>`,\n    to: 'easylexlab@gmail.com',\n    subject: '–û—Ç–∑—ã–≤',\n    text: `${name}: ${text}\\n${email}`\n  };\n  transporter.sendMail(HelperOptions, (error, info) => {\n    if(error) {\n      console.log(error);\n    } else {\n      return res.json({ success: true })\n    }\n  });\n};\n\nuserController.leaveGroup = (req, res) => {\n    const user = req.user;\n    const groupId = req.body.groupId;\n    db.User.findById(user.id).then(myUser => {\n        myUser._groups = myUser._groups.filter(group => group != groupId);\n        myUser.save().then(success => {\n            res.json({\n                success: true\n            })\n        })\n    })\n}\n\nuserController.getAvatar = (req, res) => {\n    const user = req.user;\n    const picName = req.body.picName;\n    var filePath = `uploads/${picName}`;\n    if(user && picName) {\n        fs.exists(filePath, exists => {\n            if(exists) {\n                fs.readFile(filePath, { encoding: \"base64\" }, (err, data) => {\n                    if (err) {\n                        console.log(err)\n                    }\n                    let ext = path.extname(filePath);\n                    // res.writeHead(200, { 'Content-Type': `image/${ext}` })\n                    // res.end(data, 'binary');\n                    return res.json({\n                        img: data,\n                        ext\n                    })\n                })\n            }\n        });\n    }\n}\n\nexport default userController;\n"]}