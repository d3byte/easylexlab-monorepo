{"version":3,"sources":["../../server/models/User.js"],"names":["locale","Schema","Promise","global","userSchema","firstName","type","String","required","lastName","username","minlength","email","password","bcrypt","wordsLearnt","Number","default","school","_groups","ObjectId","ref","_results","Array","notifications","permissions","picUrl","city","backgroundUrl","createdAt","format","isDeleted","Boolean","plugin","require","User","model"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AACA,iBAAOA,MAAP,CAAc,IAAd;;IAEQC,M,sBAAAA,M;;;AAER,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,IAAME,aAAa,IAAIH,MAAJ,CAAW;AAC5BI,aAAY,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EADgB;AAE5BC,YAAW,EAAEH,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAFiB;AAG5BE,YAAU;AACRJ,UAAMC,MADE,EACMC,UAAU,IADhB;AAERG,eAAW,CAAC,CAAD,EAAI,8CAAJ;AAFH,GAHkB;AAO5BC,SAAO,EAAEN,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAPqB;AAQ5BK,YAAU;AACRP,UAAMC,MADE,EACMC,UAAU,IADhB;AAERG,eAAW,CAAC,CAAD,EAAI,+CAAJ,CAFH;AAGRG,YAAQ;AAHA,GARkB;AAa5BC,eAAa,EAAET,MAAMU,MAAR,EAAgBC,SAAS,CAAzB,EAbe;AAc5BC,UAAQ,EAAEZ,MAAMC,MAAR,EAAgBU,SAAS,IAAzB,EAdoB;AAe5BE,WAAS,CAAC,EAAEb,MAAML,OAAOmB,QAAf,EAAyBC,KAAK,OAA9B,EAAuCJ,SAAS,IAAhD,EAAD,CAfmB;AAgB5BK,YAAU,EAAEhB,MAAMiB,KAAR,EAAeN,SAAS,IAAxB,EAhBkB;AAiB5BO,iBAAe,EAAElB,MAAMiB,KAAR,EAAeN,SAAS,IAAxB,EAjBa;AAkB5BQ,eAAa,EAAEnB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAlBe;AAmB5BkB,UAAQ,EAAEpB,MAAMC,MAAR,EAAgBU,SAAS,IAAzB,EAnBoB;AAoB5BU,QAAM,EAAErB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EApBsB;AAqB5BoB,iBAAe,EAAEtB,MAAMC,MAAR,EAAgBU,SAAS,IAAzB,EArBa;AAsB5BY,aAAW,EAAEvB,MAAMC,MAAR,EAAgBU,SAAS,wBAASa,MAAT,CAAgB,IAAhB,CAAzB,EAtBiB;AAuB5BC,aAAW,EAAEzB,MAAM0B,OAAR,EAAiBf,SAAS,KAA1B;AAvBiB,CAAX,CAAnB;;AA2BAb,WAAW6B,MAAX,CAAkBC,QAAQ,iBAAR,CAAlB;;AAEA,IAAMC,OAAO,mBAASC,KAAT,CAAe,MAAf,EAAuBhC,UAAvB,CAAb;;kBAEe+B,I","file":"User.js","sourcesContent":["import mongoose from 'mongoose';\nimport moment from 'moment';\nmoment.locale('ru');\n\nconst { Schema } = mongoose;\n\nmongoose.Promise = global.Promise;\n\nconst userSchema = new Schema({\n  firstName : { type: String, required: true },\n  lastName : { type: String, required: true },\n  username: {\n    type: String, required: true,\n    minlength: [5, 'Логин должен состоять хотя бы из 5 символов.']\n  },\n  email: { type: String, required: true },\n  password: {\n    type: String, required: true,\n    minlength: [6, 'Пароль должен состоять хотя бы из 6 символов.'],\n    bcrypt: true\n  },\n  wordsLearnt: { type: Number, default: 0 },\n  school: { type: String, default: null },\n  _groups: [{ type: Schema.ObjectId, ref: 'Group', default: null }],\n  _results: { type: Array, default: null },\n  notifications: { type: Array, default: null },\n  permissions: { type: String, required: true },\n  picUrl: { type: String, default: null },\n  city: { type: String, required: true },\n  backgroundUrl: { type: String, default: null },\n  createdAt: { type: String, default: moment().format('LL') },\n  isDeleted: { type: Boolean, default: false }\n});\n\n\nuserSchema.plugin(require('mongoose-bcrypt'));\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"]}