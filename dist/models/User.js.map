{"version":3,"sources":["../../server/models/User.js"],"names":["Schema","Promise","global","userSchema","firstName","type","String","required","lastName","username","minlength","email","password","bcrypt","school","default","_groups","ObjectId","ref","_results","Array","notifications","permissions","picUrl","backgroundUrl","createdAt","Date","now","isDeleted","Boolean","plugin","require","User","model"],"mappings":";;;;;;AAAA;;;;;;IAEQA,M,sBAAAA,M;;;AAER,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,IAAME,aAAa,IAAIH,MAAJ,CAAW;AAC5BI,aAAY,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EADgB;AAE5BC,YAAW,EAAEH,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAFiB;AAG5BE,YAAU;AACRJ,UAAMC,MADE,EACMC,UAAU,IADhB;AAERG,eAAW,CAAC,CAAD,EAAI,8CAAJ;AAFH,GAHkB;AAO5BC,SAAO,EAAEN,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAPqB;AAQ5BK,YAAU;AACRP,UAAMC,MADE,EACMC,UAAU,IADhB;AAERG,eAAW,CAAC,CAAD,EAAI,+CAAJ,CAFH;AAGRG,YAAQ;AAHA,GARkB;AAa5BC,UAAQ,EAAET,MAAMC,MAAR,EAAgBS,SAAS,IAAzB,EAboB;AAc5BC,WAAS,CAAC,EAAEX,MAAML,OAAOiB,QAAf,EAAyBC,KAAK,OAA9B,EAAuCH,SAAS,IAAhD,EAAD,CAdmB;AAe5BI,YAAU,EAAEd,MAAMe,KAAR,EAAeL,SAAS,IAAxB,EAfkB;AAgB5BM,iBAAe,CAAC,EAAEhB,MAAML,OAAOiB,QAAf,EAAyBC,KAAK,cAA9B,EAA8CH,SAAS,IAAvD,EAAD,CAhBa;AAiB5BO,eAAa,EAAEjB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAjBe;AAkB5BgB,UAAQ,EAAElB,MAAMC,MAAR,EAAgBS,SAAS,IAAzB,EAlBoB;AAmB5BS,iBAAe,EAAEnB,MAAMC,MAAR,EAAgBS,SAAS,IAAzB,EAnBa;AAoB5BU,aAAW,EAAEpB,MAAMqB,IAAR,EAAcX,SAASW,KAAKC,GAA5B,EApBiB;AAqB5BC,aAAW,EAAEvB,MAAMwB,OAAR,EAAiBd,SAAS,KAA1B;AArBiB,CAAX,CAAnB;;AAyBAZ,WAAW2B,MAAX,CAAkBC,QAAQ,iBAAR,CAAlB;;AAEA,IAAMC,OAAO,mBAASC,KAAT,CAAe,MAAf,EAAuB9B,UAAvB,CAAb;;kBAEe6B,I","file":"User.js","sourcesContent":["import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nmongoose.Promise = global.Promise;\n\nconst userSchema = new Schema({\n  firstName : { type: String, required: true },\n  lastName : { type: String, required: true },\n  username: {\n    type: String, required: true,\n    minlength: [5, 'Логин должен состоять хотя бы из 5 символов.']\n  },\n  email: { type: String, required: true },\n  password: {\n    type: String, required: true,\n    minlength: [6, 'Пароль должен состоять хотя бы из 6 символов.'],\n    bcrypt: true\n  },\n  school: { type: String, default: null },\n  _groups: [{ type: Schema.ObjectId, ref: 'Group', default: null }],\n  _results: { type: Array, default: null },\n  notifications: [{ type: Schema.ObjectId, ref: 'Notification', default: null }],\n  permissions: { type: String, required: true },\n  picUrl: { type: String, default: null },\n  backgroundUrl: { type: String, default: null },\n  createdAt: { type: Date, default: Date.now },\n  isDeleted: { type: Boolean, default: false }\n});\n\n\nuserSchema.plugin(require('mongoose-bcrypt'));\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"]}