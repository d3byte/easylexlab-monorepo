{"version":3,"sources":["../../server/models/User.js"],"names":["Schema","Promise","global","userSchema","name","type","String","required","username","minlength","email","password","bcrypt","school","default","_groups","ObjectId","ref","_results","Array","notifications","permissions","social","Object","createdAt","Date","now","isDeleted","Boolean","plugin","require","User","model"],"mappings":";;;;;;AAAA;;;;;;IAEQA,M,sBAAAA,M;;;AAER,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,IAAME,aAAa,IAAIH,MAAJ,CAAW;AAC5BI,QAAO,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EADqB;AAE5BC,YAAU;AACRH,UAAMC,MADE,EACMC,UAAU,IADhB;AAERE,eAAW,CAAC,CAAD,EAAI,8CAAJ;AAFH,GAFkB;AAM5BC,SAAO,EAAEL,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EANqB;AAO5BI,YAAU;AACRN,UAAMC,MADE,EACMC,UAAU,IADhB;AAERE,eAAW,CAAC,CAAD,EAAI,+CAAJ,CAFH;AAGRG,YAAQ;AAHA,GAPkB;AAY5BC,UAAQ,EAAER,MAAMC,MAAR,EAAgBQ,SAAS,IAAzB,EAZoB;AAa5BC,WAAS,CAAC,EAAEV,MAAML,OAAOgB,QAAf,EAAyBC,KAAK,OAA9B,EAAuCH,SAAS,IAAhD,EAAD,CAbmB;AAc5BI,YAAU,EAAEb,MAAMc,KAAR,EAAeL,SAAS,IAAxB,EAdkB;AAe5BM,iBAAe,EAAEf,MAAMc,KAAR,EAAeL,SAAS,IAAxB,EAfa;AAgB5BO,eAAa,EAAEhB,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAhBe;AAiB5Be,UAAQ,CAAC,EAAEjB,MAAMkB,MAAR,EAAgBT,SAAS,IAAzB,EAAD,CAjBoB;AAkB5BU,aAAW,EAAEnB,MAAMoB,IAAR,EAAcX,SAASW,KAAKC,GAA5B,EAlBiB;AAmB5BC,aAAW,EAAEtB,MAAMuB,OAAR,EAAiBd,SAAS,KAA1B;AAnBiB,CAAX,CAAnB;;AAuBAX,WAAW0B,MAAX,CAAkBC,QAAQ,iBAAR,CAAlB;;AAEA,IAAMC,OAAO,mBAASC,KAAT,CAAe,MAAf,EAAuB7B,UAAvB,CAAb;;kBAEe4B,I","file":"User.js","sourcesContent":["import mongoose from 'mongoose';\n\nconst { Schema } = mongoose;\n\nmongoose.Promise = global.Promise;\n\nconst userSchema = new Schema({\n  name : { type: String, required: true },\n  username: {\n    type: String, required: true,\n    minlength: [5, 'Логин должен состоять хотя бы из 5 символов.']\n  },\n  email: { type: String, required: true },\n  password: {\n    type: String, required: true,\n    minlength: [6, 'Пароль должен состоять хотя бы из 6 символов.'],\n    bcrypt: true\n  },\n  school: { type: String, default: null },\n  _groups: [{ type: Schema.ObjectId, ref: 'Group', default: null }],\n  _results: { type: Array, default: null },\n  notifications: { type: Array, default: null },\n  permissions: { type: String, required: true },\n  social: [{ type: Object, default: null }],\n  createdAt: { type: Date, default: Date.now },\n  isDeleted: { type: Boolean, default: false }\n});\n\n\nuserSchema.plugin(require('mongoose-bcrypt'));\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"]}