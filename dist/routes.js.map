{"version":3,"sources":["../server/routes.js"],"names":["storage","diskStorage","destination","req","file","cb","filename","Date","now","extname","originalname","upload","routes","get","post","login","secret","getGroups","verifyPassword","recoverPassword","checkToken","sendFeedback","patch","updateInfo","single","res","User","findById","body","userName","then","filePath","user","picUrl","exists","unlink","err","console","log","save","json","success","catch","status","message","changePassword","addGroup","getUser","getUserMobile","learnWords","leaveGroup","changeEmail","getAvatar","regCode","delete","addStudent","getGroup","addTest","changeName","deleteMsg","deleteGroup","removeStudent","getTests","getTest","addResult","updateResult","removeStack","newMsg","getNotifications","removeNotification"],"mappings":"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","file":"routes.js","sourcesContent":["import fs from 'fs';\nimport express from 'express';\nimport expressJWT from 'express-jwt';\nimport multer from 'multer';\nimport path from 'path';\n\nimport db from './models';\n\nimport secret from './secret';\n\n// Controller imports\nimport basicConstroller from './controllers/basicController';\nimport userController from './controllers/userController';\nimport groupController from './controllers/groupController';\nimport stackController from './controllers/stackController';\n\nconst storage = multer.diskStorage({\n    destination: function (req, file, cb) {\n        cb(null, 'uploads/')\n    },\n    filename: function (req, file, cb) {\n        cb(null, Date.now() + path.extname(file.originalname))\n    }\n});\n\nconst upload = multer({ storage: storage });\n\nconst routes = express();\n\n// Basic routes\nroutes.get('/', basicConstroller.get);\n\n// User routes\nroutes.post('/signup', userController.post);\nroutes.post('/login', userController.login);\nroutes.post('/groups', expressJWT({ secret }), userController.getGroups);\nroutes.post('/verifypassword', expressJWT({ secret }), userController.verifyPassword);\nroutes.post('/recover', userController.recoverPassword);\nroutes.post('/checktoken', userController.checkToken);\nroutes.post('/feedback', expressJWT({ secret }), userController.sendFeedback);\nroutes.patch('/newinfo', expressJWT({ secret }), userController.updateInfo);\nroutes.post('/upload-image', upload.single('image'), function (req, res) {\n    if(req.file.filename) {\n        db.User.findById(req.body.userName).then(user => {\n            var filePath = `uploads/${user.picUrl}`;\n            fs.exists(filePath, exists => {\n                if(exists) {\n                    fs.unlink(filePath, err => {\n                        if (err) {\n                            console.log(\"failed to delete local image: \" + err);\n                            return\n                        }\n                        user.picUrl = req.file.filename;\n                        user.save().then(() => {\n                            return res.json({\n                                success: true\n                            });\n                        })\n                    })\n                } else {\n                    user.picUrl = req.file.filename;\n                    user.save().then(() => {\n                        return res.json({\n                            success: true\n                        });\n                    })\n                }\n            });\n        }).catch(err => {\n            return res.status(500).json({\n                message: err\n            });\n        });\n    }\n});\nroutes.patch('/newpassword', expressJWT({ secret }), userController.changePassword);\nroutes.patch('/addgroup', expressJWT({ secret }), userController.addGroup);\nroutes.post('/user', expressJWT({ secret }), userController.getUser);\nroutes.post('/user-mobile', expressJWT({ secret }), userController.getUserMobile);\nroutes.patch('/words', expressJWT({ secret }), userController.learnWords);\nroutes.post('/leavegroup', expressJWT({ secret }), userController.leaveGroup);\nroutes.post('/change-email', expressJWT({ secret }), userController.changeEmail);\nroutes.post('/getavatar', expressJWT({ secret }), userController.getAvatar);\n\n// Group routes\nroutes.post('/regcode', expressJWT({ secret }), groupController.regCode);\nroutes.post('/addgroup', expressJWT({ secret }), groupController.post);\nroutes.delete('/deletegroup', expressJWT({ secret }), groupController.delete);\nroutes.patch('/addstudent', groupController.addStudent);\nroutes.post('/getgroups', expressJWT({ secret }), groupController.getGroups);\nroutes.post('/getgroup', expressJWT({ secret }), groupController.getGroup);\nroutes.post('/addtest', expressJWT({ secret }), groupController.addTest);\nroutes.patch('/changename', expressJWT({ secret }), groupController.changeName);\nroutes.post('/deletemsg', expressJWT({ secret }), groupController.deleteMsg);\nroutes.post('/deletegroup', expressJWT({ secret }), groupController.deleteGroup);\nroutes.post('/removestudent', expressJWT({ secret }), groupController.removeStudent);\n\n\n// Stack routes\nroutes.post('/newstack', expressJWT({ secret }), stackController.post);\nroutes.post('/gettests', expressJWT({ secret }), stackController.getTests);\nroutes.post('/gettest', expressJWT({ secret }), stackController.getTest);\nroutes.patch('/addresult', expressJWT({ secret }), stackController.addResult);\nroutes.patch('/updateresult', expressJWT({ secret }), stackController.updateResult);\nroutes.post('/removetask', expressJWT({ secret }), stackController.removeStack);\n\n\n// Notification and message routes\nroutes.post('/newmsg', expressJWT({ secret }), groupController.newMsg);\nroutes.post('/getnotifs', expressJWT({ secret }), userController.getNotifications);\nroutes.post('/removenotif', expressJWT({ secret }), userController.removeNotification);\n\nexport default routes;\n"]}