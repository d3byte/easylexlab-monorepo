{"version":3,"sources":["../server/routes.js"],"names":["routes","get","post","login","secret","getGroups","verifyPassword","patch","updateInfo","changePassword","addGroup","getUser","learnWords","regCode","delete","addStudent","getGroup","addTest","getTests","getTest","addResult","updateResult","newMsg","getNotifications","removeNotification"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAJA;AAMA,IAAMA,SAAS,wBAAf;;AAEA;AACAA,OAAOC,GAAP,CAAW,GAAX,EAAgB,0BAAiBA,GAAjC;;AAEA;AACAD,OAAOE,IAAP,CAAY,SAAZ,EAAuB,yBAAeA,IAAtC;AACAF,OAAOE,IAAP,CAAY,QAAZ,EAAsB,yBAAeC,KAArC;AACAH,OAAOE,IAAP,CAAY,SAAZ,EAAuB,0BAAW,EAAEE,wBAAF,EAAX,CAAvB,EAA+C,yBAAeC,SAA9D;AACAL,OAAOE,IAAP,CAAY,iBAAZ,EAA+B,0BAAW,EAAEE,wBAAF,EAAX,CAA/B,EAAuD,yBAAeE,cAAtE;AACAN,OAAOO,KAAP,CAAa,UAAb,EAAyB,0BAAW,EAAEH,wBAAF,EAAX,CAAzB,EAAiD,yBAAeI,UAAhE;AACAR,OAAOO,KAAP,CAAa,cAAb,EAA6B,0BAAW,EAAEH,wBAAF,EAAX,CAA7B,EAAqD,yBAAeK,cAApE;AACAT,OAAOO,KAAP,CAAa,WAAb,EAA0B,0BAAW,EAAEH,wBAAF,EAAX,CAA1B,EAAkD,yBAAeM,QAAjE;AACAV,OAAOE,IAAP,CAAY,OAAZ,EAAqB,0BAAW,EAAEE,wBAAF,EAAX,CAArB,EAA6C,yBAAeO,OAA5D;AACAX,OAAOO,KAAP,CAAa,QAAb,EAAuB,0BAAW,EAAEH,wBAAF,EAAX,CAAvB,EAA+C,yBAAeQ,UAA9D;;AAEA;AACAZ,OAAOE,IAAP,CAAY,UAAZ,EAAwB,0BAAW,EAAEE,wBAAF,EAAX,CAAxB,EAAgD,0BAAgBS,OAAhE;AACAb,OAAOE,IAAP,CAAY,WAAZ,EAAyB,0BAAW,EAAEE,wBAAF,EAAX,CAAzB,EAAiD,0BAAgBF,IAAjE;AACAF,OAAOc,MAAP,CAAc,cAAd,EAA8B,0BAAW,EAAEV,wBAAF,EAAX,CAA9B,EAAsD,0BAAgBU,MAAtE;AACAd,OAAOO,KAAP,CAAa,aAAb,EAA4B,0BAAgBQ,UAA5C;AACAf,OAAOE,IAAP,CAAY,YAAZ,EAA0B,0BAAW,EAAEE,wBAAF,EAAX,CAA1B,EAAkD,0BAAgBC,SAAlE;AACAL,OAAOE,IAAP,CAAY,WAAZ,EAAyB,0BAAW,EAAEE,wBAAF,EAAX,CAAzB,EAAiD,0BAAgBY,QAAjE;AACAhB,OAAOE,IAAP,CAAY,UAAZ,EAAwB,0BAAW,EAAEE,wBAAF,EAAX,CAAxB,EAAgD,0BAAgBa,OAAhE;;AAEA;AACAjB,OAAOE,IAAP,CAAY,WAAZ,EAAyB,0BAAW,EAAEE,wBAAF,EAAX,CAAzB,EAAiD,0BAAgBF,IAAjE;AACAF,OAAOE,IAAP,CAAY,WAAZ,EAAyB,0BAAW,EAAEE,wBAAF,EAAX,CAAzB,EAAiD,0BAAgBc,QAAjE;AACAlB,OAAOE,IAAP,CAAY,UAAZ,EAAwB,0BAAW,EAAEE,wBAAF,EAAX,CAAxB,EAAgD,0BAAgBe,OAAhE;AACAnB,OAAOO,KAAP,CAAa,YAAb,EAA2B,0BAAW,EAAEH,wBAAF,EAAX,CAA3B,EAAmD,0BAAgBgB,SAAnE;AACApB,OAAOO,KAAP,CAAa,eAAb,EAA8B,0BAAW,EAAEH,wBAAF,EAAX,CAA9B,EAAsD,0BAAgBiB,YAAtE;;AAEA;AACArB,OAAOE,IAAP,CAAY,SAAZ,EAAuB,0BAAW,EAAEE,wBAAF,EAAX,CAAvB,EAA+C,0BAAgBkB,MAA/D;AACAtB,OAAOE,IAAP,CAAY,YAAZ,EAA0B,0BAAW,EAAEE,wBAAF,EAAX,CAA1B,EAAkD,yBAAemB,gBAAjE;AACAvB,OAAOE,IAAP,CAAY,cAAZ,EAA4B,0BAAW,EAAEE,wBAAF,EAAX,CAA5B,EAAoD,yBAAeoB,kBAAnE;;kBAEexB,M","file":"routes.js","sourcesContent":["import express from 'express';\nimport expressJWT from 'express-jwt';\n\nimport secret from './secret';\n\n// Controller imports\nimport basicConstroller from './controllers/basicController';\nimport userController from './controllers/userController';\nimport groupController from './controllers/groupController';\nimport stackController from './controllers/stackController';\n\nconst routes = express();\n\n// Basic routes\nroutes.get('/', basicConstroller.get);\n\n// User routes\nroutes.post('/signup', userController.post);\nroutes.post('/login', userController.login);\nroutes.post('/groups', expressJWT({ secret }), userController.getGroups);\nroutes.post('/verifypassword', expressJWT({ secret }), userController.verifyPassword);\nroutes.patch('/newinfo', expressJWT({ secret }), userController.updateInfo);\nroutes.patch('/newpassword', expressJWT({ secret }), userController.changePassword);\nroutes.patch('/addgroup', expressJWT({ secret }), userController.addGroup);\nroutes.post('/user', expressJWT({ secret }), userController.getUser);\nroutes.patch('/words', expressJWT({ secret }), userController.learnWords);\n\n// Group routes\nroutes.post('/regcode', expressJWT({ secret }), groupController.regCode);\nroutes.post('/addgroup', expressJWT({ secret }), groupController.post);\nroutes.delete('/deletegroup', expressJWT({ secret }), groupController.delete);\nroutes.patch('/addstudent', groupController.addStudent);\nroutes.post('/getgroups', expressJWT({ secret }), groupController.getGroups);\nroutes.post('/getgroup', expressJWT({ secret }), groupController.getGroup);\nroutes.post('/addtest', expressJWT({ secret }), groupController.addTest);\n\n// Stack routes\nroutes.post('/newstack', expressJWT({ secret }), stackController.post);\nroutes.post('/gettests', expressJWT({ secret }), stackController.getTests);\nroutes.post('/gettest', expressJWT({ secret }), stackController.getTest);\nroutes.patch('/addresult', expressJWT({ secret }), stackController.addResult);\nroutes.patch('/updateresult', expressJWT({ secret }), stackController.updateResult);\n\n// Notification and message routes\nroutes.post('/newmsg', expressJWT({ secret }), groupController.newMsg);\nroutes.post('/getnotifs', expressJWT({ secret }), userController.getNotifications);\nroutes.post('/removenotif', expressJWT({ secret }), userController.removeNotification);\n\nexport default routes;\n"]}